{{ $shard := required "The deployment shard must be set!" .Values.pleiades.server.deploymentShard | default 1 }}
{{ $dc := required "The data centre must be set!" .Values.pleiades.server.dataCentre | default ""}}
{{ $region := required "The region must be set!" .Values.pleiades.server.region | default "" }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "helm.fullname" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "helm.fullname" . }}-fabric
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "helm.fullname" . }}
      spec:
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        resources:
          requests:
            storage: {{ required  "The disk size is required" .Values.pleiades.storage.size }}
        storageClassName: {{ required  "The storage class is required" .Values.pleiades.storage.storageClass }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: disk-check
          image: busybox:latest
          command:
            - "sh"
            - "-c"
            - "chown -R 1000:1000 /var/pleiades/"
          volumeMounts:
            - name: {{ include "helm.fullname" . }}
              mountPath: "/var/pleiades"
      containers:
        - name: server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ required "The version of pleiades to deploy is required!" .Values.image.tag }}
          imagePullPolicy: Always
          command:
            - /pleiades
          args:
            - server
            - -base-path=/var/pleiades
            - -deployment-id={{ $shard }}
            - -http-port={{ .Values.pleiades.server.ports.http | default 8080 }}
            - -fabric-port={{ .Values.pleiades.server.ports.raft | default 8081 }}
            - -round-trip={{ .Values.pleiades.server.roundTrip | default 10 }}
            {{ if .Values.pleiades.server.raft.clusterHostname }}
            - -fabric-hostname={{ .Values.pleiades.server.raft.clusterHostname }}
            {{ else }}
            - -fabric-hostname=$(SERVER_NAME).$(FABRIC_SERVICE_NAME).$(KUBERNETES_NAMESPACE).svc.cluster.local
            {{ end }}
            {{ if .Values.pleiades.server.debug }}
            - -debug
            {{ end }}
          env:
            - name: DATA_CENTRE
              value: {{ $dc }}
            - name: REGION
              value: {{ $region }}
            - name: DEPLOYMENT_SHARD
              value: {{ $shard | quote }}
            - name: SERVER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: FABRIC_SERVICE_NAME
              value: {{ include "helm.fullname" . }}-fabric
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: {{ .Values.pleiades.server.ports.http | default 8080 }}
              protocol: TCP
            - name: fabric
              containerPort: {{ .Values.pleiades.server.ports.raft | default 8081 }}
              protocol: TCP
            - name: constellation
              containerPort: {{ .Values.pleiades.server.ports.gossip | default 8082 }}
              protocol: TCP
          livenessProbe:
            grpc:
              port: {{ .Values.pleiades.server.ports.http | default 8080 }}
              service: "kvstore.v1.KvStoreService"
            initialDelaySeconds: 10
          readinessProbe:
            grpc:
              port: {{ .Values.pleiades.server.ports.http | default 8080 }}
              service: "kvstore.v1.KvStoreService"
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/pleiades
              name: {{ include "helm.fullname" . }}
