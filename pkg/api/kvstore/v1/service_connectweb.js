// @generated by protoc-gen-connect-web v0.2.1 with parameter "target=js+dts"
// @generated from file kvstore/v1/service.proto (package kvstore.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {CreateAccountRequest, CreateAccountResponse, CreateBucketRequest, CreateBucketResponse, DeleteAccountRequest, DeleteAccountResponse, DeleteBucketRequest, DeleteBucketResponse, DeleteKeyRequest, DeleteKeyResponse, GetKeyRequest, GetKeyResponse, PutKeyRequest, PutKeyResponse} from "./kv_pb.js";
import {MethodKind} from "@bufbuild/protobuf";
import {CloseTransactionRequest, CloseTransactionResponse, CommitRequest, CommitResponse, NewTransactionRequest, NewTransactionResponse} from "./transactions_pb.js";

/**
 * @generated from service kvstore.v1.KvStoreService
 */
export const KvStoreService = {
  typeName: "kvstore.v1.KvStoreService",
  methods: {
    /**
     * @generated from rpc kvstore.v1.KvStoreService.CreateAccount
     */
    createAccount: {
      name: "CreateAccount",
      I: CreateAccountRequest,
      O: CreateAccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.KvStoreService.DeleteAccount
     */
    deleteAccount: {
      name: "DeleteAccount",
      I: DeleteAccountRequest,
      O: DeleteAccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.KvStoreService.CreateBucket
     */
    createBucket: {
      name: "CreateBucket",
      I: CreateBucketRequest,
      O: CreateBucketResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.KvStoreService.DeleteBucket
     */
    deleteBucket: {
      name: "DeleteBucket",
      I: DeleteBucketRequest,
      O: DeleteBucketResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.KvStoreService.GetKey
     */
    getKey: {
      name: "GetKey",
      I: GetKeyRequest,
      O: GetKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.KvStoreService.PutKey
     */
    putKey: {
      name: "PutKey",
      I: PutKeyRequest,
      O: PutKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.KvStoreService.DeleteKey
     */
    deleteKey: {
      name: "DeleteKey",
      I: DeleteKeyRequest,
      O: DeleteKeyResponse,
      kind: MethodKind.Unary,
    },
  }
};

/**
 * @generated from service kvstore.v1.TransactionsService
 */
export const TransactionsService = {
  typeName: "kvstore.v1.TransactionsService",
  methods: {
    /**
     * @generated from rpc kvstore.v1.TransactionsService.NewTransaction
     */
    newTransaction: {
      name: "NewTransaction",
      I: NewTransactionRequest,
      O: NewTransactionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.TransactionsService.CloseTransaction
     */
    closeTransaction: {
      name: "CloseTransaction",
      I: CloseTransactionRequest,
      O: CloseTransactionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kvstore.v1.TransactionsService.Commit
     */
    commit: {
      name: "Commit",
      I: CommitRequest,
      O: CommitResponse,
      kind: MethodKind.Unary,
    },
  }
};

