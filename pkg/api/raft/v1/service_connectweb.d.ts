// @generated by protoc-gen-connect-web v0.2.1 with parameter "target=js+dts"
// @generated from file raft/v1/service.proto (package raft.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {AddReplicaObserverRequest, AddReplicaObserverResponse, AddReplicaRequest, AddReplicaResponse, AddReplicaWitnessRequest, AddReplicaWitnessResponse, GetLeaderIdRequest, GetLeaderIdResponse, GetShardMembersRequest, GetShardMembersResponse, NewShardRequest, NewShardResponse, RemoveDataRequest, RemoveDataResponse, RemoveReplicaRequest, RemoveReplicaResponse, StartReplicaObserverRequest, StartReplicaObserverResponse, StartReplicaRequest, StartReplicaResponse, StopReplicaRequest, StopReplicaResponse} from "./raft_shard_pb.js";
import {MethodKind} from "@bufbuild/protobuf";
import {CompactRequest, CompactResponse, GetHostConfigRequest, GetHostConfigResponse, SnapshotRequest, SnapshotResponse, StopRequest, StopResponse} from "./raft_host_pb.js";

/**
 * @generated from service raft.v1.ShardService
 */
export declare const ShardService: {
  readonly typeName: "raft.v1.ShardService",
  readonly methods: {
    /**
     * @generated from rpc raft.v1.ShardService.AddReplica
     */
    readonly addReplica: {
      readonly name: "AddReplica",
      readonly I: typeof AddReplicaRequest,
      readonly O: typeof AddReplicaResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.AddReplicaObserver
     */
    readonly addReplicaObserver: {
      readonly name: "AddReplicaObserver",
      readonly I: typeof AddReplicaObserverRequest,
      readonly O: typeof AddReplicaObserverResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.AddReplicaWitness
     */
    readonly addReplicaWitness: {
      readonly name: "AddReplicaWitness",
      readonly I: typeof AddReplicaWitnessRequest,
      readonly O: typeof AddReplicaWitnessResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.GetLeaderId
     */
    readonly getLeaderId: {
      readonly name: "GetLeaderId",
      readonly I: typeof GetLeaderIdRequest,
      readonly O: typeof GetLeaderIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.GetShardMembers
     */
    readonly getShardMembers: {
      readonly name: "GetShardMembers",
      readonly I: typeof GetShardMembersRequest,
      readonly O: typeof GetShardMembersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.NewShard
     */
    readonly newShard: {
      readonly name: "NewShard",
      readonly I: typeof NewShardRequest,
      readonly O: typeof NewShardResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.RemoveData
     */
    readonly removeData: {
      readonly name: "RemoveData",
      readonly I: typeof RemoveDataRequest,
      readonly O: typeof RemoveDataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.RemoveReplica
     */
    readonly removeReplica: {
      readonly name: "RemoveReplica",
      readonly I: typeof RemoveReplicaRequest,
      readonly O: typeof RemoveReplicaResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.StartReplica
     */
    readonly startReplica: {
      readonly name: "StartReplica",
      readonly I: typeof StartReplicaRequest,
      readonly O: typeof StartReplicaResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.StartReplicaObserver
     */
    readonly startReplicaObserver: {
      readonly name: "StartReplicaObserver",
      readonly I: typeof StartReplicaObserverRequest,
      readonly O: typeof StartReplicaObserverResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.StopReplica
     */
    readonly stopReplica: {
      readonly name: "StopReplica",
      readonly I: typeof StopReplicaRequest,
      readonly O: typeof StopReplicaResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

/**
 * @generated from service raft.v1.HostService
 */
export declare const HostService: {
  readonly typeName: "raft.v1.HostService",
  readonly methods: {
    /**
     * @generated from rpc raft.v1.HostService.Compact
     */
    readonly compact: {
      readonly name: "Compact",
      readonly I: typeof CompactRequest,
      readonly O: typeof CompactResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.HostService.GetHostConfig
     */
    readonly getHostConfig: {
      readonly name: "GetHostConfig",
      readonly I: typeof GetHostConfigRequest,
      readonly O: typeof GetHostConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *  rpc LeaderTransfer(LeaderTransferRequest) returns (LeaderTransferResponse);
     *
     * @generated from rpc raft.v1.HostService.Snapshot
     */
    readonly snapshot: {
      readonly name: "Snapshot",
      readonly I: typeof SnapshotRequest,
      readonly O: typeof SnapshotResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.HostService.Stop
     */
    readonly stop: {
      readonly name: "Stop",
      readonly I: typeof StopRequest,
      readonly O: typeof StopResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

