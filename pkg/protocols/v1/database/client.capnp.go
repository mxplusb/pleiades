// Code generated by capnpc-go. DO NOT EDIT.

package database

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type Client struct{ Client capnp.Client }

// Client_TypeID is the unique identifier for the type Client.
const Client_TypeID = 0xc212c5427766d750

func (c Client) NewSession(ctx context.Context, params func(Client_newSession_Params) error) (Client_newSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "newSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Client_newSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Client_newSession_Results_Future{Future: ans.Future()}, release
}
func (c Client) CloseSession(ctx context.Context, params func(Client_closeSession_Params) error) (Client_closeSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      1,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "closeSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Client_closeSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Client_closeSession_Results_Future{Future: ans.Future()}, release
}
func (c Client) GetClusterId(ctx context.Context, params func(Client_getClusterId_Params) error) (Client_getClusterId_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      2,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "getClusterId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Client_getClusterId_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Client_getClusterId_Results_Future{Future: ans.Future()}, release
}
func (c Client) GetClientId(ctx context.Context, params func(Client_getClientId_Params) error) (Client_getClientId_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      3,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "getClientId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Client_getClientId_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Client_getClientId_Results_Future{Future: ans.Future()}, release
}
func (c Client) Propose(ctx context.Context, params func(Client_propose_Params) error) (Client_propose_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      4,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "propose",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Client_propose_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Client_propose_Results_Future{Future: ans.Future()}, release
}
func (c Client) Read(ctx context.Context, params func(Client_read_Params) error) (Client_read_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      5,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "read",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Client_read_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Client_read_Results_Future{Future: ans.Future()}, release
}

func (c Client) AddRef() Client {
	return Client{
		Client: c.Client.AddRef(),
	}
}

func (c Client) Release() {
	c.Client.Release()
}

// A Client_Server is a Client with a local implementation.
type Client_Server interface {
	NewSession(context.Context, Client_newSession) error

	CloseSession(context.Context, Client_closeSession) error

	GetClusterId(context.Context, Client_getClusterId) error

	GetClientId(context.Context, Client_getClientId) error

	Propose(context.Context, Client_propose) error

	Read(context.Context, Client_read) error
}

// Client_NewServer creates a new Server from an implementation of Client_Server.
func Client_NewServer(s Client_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Client_Methods(nil, s), s, c, policy)
}

// Client_ServerToClient creates a new Client from an implementation of Client_Server.
// The caller is responsible for calling Release on the returned Client.
func Client_ServerToClient(s Client_Server, policy *server.Policy) Client {
	return Client{Client: capnp.NewClient(Client_NewServer(s, policy))}
}

// Client_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Client_Methods(methods []server.Method, s Client_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "newSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewSession(ctx, Client_newSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      1,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "closeSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CloseSession(ctx, Client_closeSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      2,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "getClusterId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetClusterId(ctx, Client_getClusterId{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      3,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "getClientId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetClientId(ctx, Client_getClientId{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      4,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "propose",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Propose(ctx, Client_propose{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc212c5427766d750,
			MethodID:      5,
			InterfaceName: "protocols/v1/database/client.capnp:Client",
			MethodName:    "read",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Read(ctx, Client_read{call})
		},
	})

	return methods
}

// Client_newSession holds the state for a server call to Client.newSession.
// See server.Call for documentation.
type Client_newSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Client_newSession) Args() Client_newSession_Params {
	return Client_newSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Client_newSession) AllocResults() (Client_newSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_newSession_Results{Struct: r}, err
}

// Client_closeSession holds the state for a server call to Client.closeSession.
// See server.Call for documentation.
type Client_closeSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Client_closeSession) Args() Client_closeSession_Params {
	return Client_closeSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Client_closeSession) AllocResults() (Client_closeSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Client_closeSession_Results{Struct: r}, err
}

// Client_getClusterId holds the state for a server call to Client.getClusterId.
// See server.Call for documentation.
type Client_getClusterId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Client_getClusterId) Args() Client_getClusterId_Params {
	return Client_getClusterId_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Client_getClusterId) AllocResults() (Client_getClusterId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_getClusterId_Results{Struct: r}, err
}

// Client_getClientId holds the state for a server call to Client.getClientId.
// See server.Call for documentation.
type Client_getClientId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Client_getClientId) Args() Client_getClientId_Params {
	return Client_getClientId_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Client_getClientId) AllocResults() (Client_getClientId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_getClientId_Results{Struct: r}, err
}

// Client_propose holds the state for a server call to Client.propose.
// See server.Call for documentation.
type Client_propose struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Client_propose) Args() Client_propose_Params {
	return Client_propose_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Client_propose) AllocResults() (Client_propose_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_propose_Results{Struct: r}, err
}

// Client_read holds the state for a server call to Client.read.
// See server.Call for documentation.
type Client_read struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Client_read) Args() Client_read_Params {
	return Client_read_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Client_read) AllocResults() (Client_read_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_read_Results{Struct: r}, err
}

// Client_List is a list of Client.
type Client_List = capnp.CapList[Client]

// NewClient creates a new list of Client.
func NewClient_List(s *capnp.Segment, sz int32) (Client_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[Client](l), err
}

type Client_newSession_Params struct{ capnp.Struct }

// Client_newSession_Params_TypeID is the unique identifier for the type Client_newSession_Params.
const Client_newSession_Params_TypeID = 0xed79f6f5f2329381

func NewClient_newSession_Params(s *capnp.Segment) (Client_newSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_newSession_Params{st}, err
}

func NewRootClient_newSession_Params(s *capnp.Segment) (Client_newSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_newSession_Params{st}, err
}

func ReadRootClient_newSession_Params(msg *capnp.Message) (Client_newSession_Params, error) {
	root, err := msg.Root()
	return Client_newSession_Params{root.Struct()}, err
}

func (s Client_newSession_Params) String() string {
	str, _ := text.Marshal(0xed79f6f5f2329381, s.Struct)
	return str
}

func (s Client_newSession_Params) ClusterId() uint64 {
	return s.Struct.Uint64(0)
}

func (s Client_newSession_Params) SetClusterId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Client_newSession_Params_List is a list of Client_newSession_Params.
type Client_newSession_Params_List = capnp.StructList[Client_newSession_Params]

// NewClient_newSession_Params creates a new list of Client_newSession_Params.
func NewClient_newSession_Params_List(s *capnp.Segment, sz int32) (Client_newSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Client_newSession_Params]{List: l}, err
}

// Client_newSession_Params_Future is a wrapper for a Client_newSession_Params promised by a client call.
type Client_newSession_Params_Future struct{ *capnp.Future }

func (p Client_newSession_Params_Future) Struct() (Client_newSession_Params, error) {
	s, err := p.Future.Struct()
	return Client_newSession_Params{s}, err
}

type Client_newSession_Results struct{ capnp.Struct }

// Client_newSession_Results_TypeID is the unique identifier for the type Client_newSession_Results.
const Client_newSession_Results_TypeID = 0xaaf30f9b96dbaba8

func NewClient_newSession_Results(s *capnp.Segment) (Client_newSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_newSession_Results{st}, err
}

func NewRootClient_newSession_Results(s *capnp.Segment) (Client_newSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_newSession_Results{st}, err
}

func ReadRootClient_newSession_Results(msg *capnp.Message) (Client_newSession_Results, error) {
	root, err := msg.Root()
	return Client_newSession_Results{root.Struct()}, err
}

func (s Client_newSession_Results) String() string {
	str, _ := text.Marshal(0xaaf30f9b96dbaba8, s.Struct)
	return str
}

func (s Client_newSession_Results) Session() (Session, error) {
	p, err := s.Struct.Ptr(0)
	return Session{Struct: p.Struct()}, err
}

func (s Client_newSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s Client_newSession_Results) SetSession(v Session) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSession sets the session field to a newly
// allocated Session struct, preferring placement in s's segment.
func (s Client_newSession_Results) NewSession() (Session, error) {
	ss, err := NewSession(s.Struct.Segment())
	if err != nil {
		return Session{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Client_newSession_Results_List is a list of Client_newSession_Results.
type Client_newSession_Results_List = capnp.StructList[Client_newSession_Results]

// NewClient_newSession_Results creates a new list of Client_newSession_Results.
func NewClient_newSession_Results_List(s *capnp.Segment, sz int32) (Client_newSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Client_newSession_Results]{List: l}, err
}

// Client_newSession_Results_Future is a wrapper for a Client_newSession_Results promised by a client call.
type Client_newSession_Results_Future struct{ *capnp.Future }

func (p Client_newSession_Results_Future) Struct() (Client_newSession_Results, error) {
	s, err := p.Future.Struct()
	return Client_newSession_Results{s}, err
}

func (p Client_newSession_Results_Future) Session() Session_Future {
	return Session_Future{Future: p.Future.Field(0, nil)}
}

type Client_closeSession_Params struct{ capnp.Struct }

// Client_closeSession_Params_TypeID is the unique identifier for the type Client_closeSession_Params.
const Client_closeSession_Params_TypeID = 0xb11bd3344150410c

func NewClient_closeSession_Params(s *capnp.Segment) (Client_closeSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_closeSession_Params{st}, err
}

func NewRootClient_closeSession_Params(s *capnp.Segment) (Client_closeSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_closeSession_Params{st}, err
}

func ReadRootClient_closeSession_Params(msg *capnp.Message) (Client_closeSession_Params, error) {
	root, err := msg.Root()
	return Client_closeSession_Params{root.Struct()}, err
}

func (s Client_closeSession_Params) String() string {
	str, _ := text.Marshal(0xb11bd3344150410c, s.Struct)
	return str
}

func (s Client_closeSession_Params) Session() (Session, error) {
	p, err := s.Struct.Ptr(0)
	return Session{Struct: p.Struct()}, err
}

func (s Client_closeSession_Params) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s Client_closeSession_Params) SetSession(v Session) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSession sets the session field to a newly
// allocated Session struct, preferring placement in s's segment.
func (s Client_closeSession_Params) NewSession() (Session, error) {
	ss, err := NewSession(s.Struct.Segment())
	if err != nil {
		return Session{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Client_closeSession_Params_List is a list of Client_closeSession_Params.
type Client_closeSession_Params_List = capnp.StructList[Client_closeSession_Params]

// NewClient_closeSession_Params creates a new list of Client_closeSession_Params.
func NewClient_closeSession_Params_List(s *capnp.Segment, sz int32) (Client_closeSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Client_closeSession_Params]{List: l}, err
}

// Client_closeSession_Params_Future is a wrapper for a Client_closeSession_Params promised by a client call.
type Client_closeSession_Params_Future struct{ *capnp.Future }

func (p Client_closeSession_Params_Future) Struct() (Client_closeSession_Params, error) {
	s, err := p.Future.Struct()
	return Client_closeSession_Params{s}, err
}

func (p Client_closeSession_Params_Future) Session() Session_Future {
	return Session_Future{Future: p.Future.Field(0, nil)}
}

type Client_closeSession_Results struct{ capnp.Struct }

// Client_closeSession_Results_TypeID is the unique identifier for the type Client_closeSession_Results.
const Client_closeSession_Results_TypeID = 0xc40bcadbe673eafe

func NewClient_closeSession_Results(s *capnp.Segment) (Client_closeSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Client_closeSession_Results{st}, err
}

func NewRootClient_closeSession_Results(s *capnp.Segment) (Client_closeSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Client_closeSession_Results{st}, err
}

func ReadRootClient_closeSession_Results(msg *capnp.Message) (Client_closeSession_Results, error) {
	root, err := msg.Root()
	return Client_closeSession_Results{root.Struct()}, err
}

func (s Client_closeSession_Results) String() string {
	str, _ := text.Marshal(0xc40bcadbe673eafe, s.Struct)
	return str
}

// Client_closeSession_Results_List is a list of Client_closeSession_Results.
type Client_closeSession_Results_List = capnp.StructList[Client_closeSession_Results]

// NewClient_closeSession_Results creates a new list of Client_closeSession_Results.
func NewClient_closeSession_Results_List(s *capnp.Segment, sz int32) (Client_closeSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Client_closeSession_Results]{List: l}, err
}

// Client_closeSession_Results_Future is a wrapper for a Client_closeSession_Results promised by a client call.
type Client_closeSession_Results_Future struct{ *capnp.Future }

func (p Client_closeSession_Results_Future) Struct() (Client_closeSession_Results, error) {
	s, err := p.Future.Struct()
	return Client_closeSession_Results{s}, err
}

type Client_getClusterId_Params struct{ capnp.Struct }

// Client_getClusterId_Params_TypeID is the unique identifier for the type Client_getClusterId_Params.
const Client_getClusterId_Params_TypeID = 0xd8f9e317dc892161

func NewClient_getClusterId_Params(s *capnp.Segment) (Client_getClusterId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Client_getClusterId_Params{st}, err
}

func NewRootClient_getClusterId_Params(s *capnp.Segment) (Client_getClusterId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Client_getClusterId_Params{st}, err
}

func ReadRootClient_getClusterId_Params(msg *capnp.Message) (Client_getClusterId_Params, error) {
	root, err := msg.Root()
	return Client_getClusterId_Params{root.Struct()}, err
}

func (s Client_getClusterId_Params) String() string {
	str, _ := text.Marshal(0xd8f9e317dc892161, s.Struct)
	return str
}

// Client_getClusterId_Params_List is a list of Client_getClusterId_Params.
type Client_getClusterId_Params_List = capnp.StructList[Client_getClusterId_Params]

// NewClient_getClusterId_Params creates a new list of Client_getClusterId_Params.
func NewClient_getClusterId_Params_List(s *capnp.Segment, sz int32) (Client_getClusterId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Client_getClusterId_Params]{List: l}, err
}

// Client_getClusterId_Params_Future is a wrapper for a Client_getClusterId_Params promised by a client call.
type Client_getClusterId_Params_Future struct{ *capnp.Future }

func (p Client_getClusterId_Params_Future) Struct() (Client_getClusterId_Params, error) {
	s, err := p.Future.Struct()
	return Client_getClusterId_Params{s}, err
}

type Client_getClusterId_Results struct{ capnp.Struct }

// Client_getClusterId_Results_TypeID is the unique identifier for the type Client_getClusterId_Results.
const Client_getClusterId_Results_TypeID = 0xb7edc2f82dfb5c92

func NewClient_getClusterId_Results(s *capnp.Segment) (Client_getClusterId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_getClusterId_Results{st}, err
}

func NewRootClient_getClusterId_Results(s *capnp.Segment) (Client_getClusterId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_getClusterId_Results{st}, err
}

func ReadRootClient_getClusterId_Results(msg *capnp.Message) (Client_getClusterId_Results, error) {
	root, err := msg.Root()
	return Client_getClusterId_Results{root.Struct()}, err
}

func (s Client_getClusterId_Results) String() string {
	str, _ := text.Marshal(0xb7edc2f82dfb5c92, s.Struct)
	return str
}

func (s Client_getClusterId_Results) ClusterId() uint64 {
	return s.Struct.Uint64(0)
}

func (s Client_getClusterId_Results) SetClusterId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Client_getClusterId_Results_List is a list of Client_getClusterId_Results.
type Client_getClusterId_Results_List = capnp.StructList[Client_getClusterId_Results]

// NewClient_getClusterId_Results creates a new list of Client_getClusterId_Results.
func NewClient_getClusterId_Results_List(s *capnp.Segment, sz int32) (Client_getClusterId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Client_getClusterId_Results]{List: l}, err
}

// Client_getClusterId_Results_Future is a wrapper for a Client_getClusterId_Results promised by a client call.
type Client_getClusterId_Results_Future struct{ *capnp.Future }

func (p Client_getClusterId_Results_Future) Struct() (Client_getClusterId_Results, error) {
	s, err := p.Future.Struct()
	return Client_getClusterId_Results{s}, err
}

type Client_getClientId_Params struct{ capnp.Struct }

// Client_getClientId_Params_TypeID is the unique identifier for the type Client_getClientId_Params.
const Client_getClientId_Params_TypeID = 0xff7bd42f170b6311

func NewClient_getClientId_Params(s *capnp.Segment) (Client_getClientId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Client_getClientId_Params{st}, err
}

func NewRootClient_getClientId_Params(s *capnp.Segment) (Client_getClientId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Client_getClientId_Params{st}, err
}

func ReadRootClient_getClientId_Params(msg *capnp.Message) (Client_getClientId_Params, error) {
	root, err := msg.Root()
	return Client_getClientId_Params{root.Struct()}, err
}

func (s Client_getClientId_Params) String() string {
	str, _ := text.Marshal(0xff7bd42f170b6311, s.Struct)
	return str
}

// Client_getClientId_Params_List is a list of Client_getClientId_Params.
type Client_getClientId_Params_List = capnp.StructList[Client_getClientId_Params]

// NewClient_getClientId_Params creates a new list of Client_getClientId_Params.
func NewClient_getClientId_Params_List(s *capnp.Segment, sz int32) (Client_getClientId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Client_getClientId_Params]{List: l}, err
}

// Client_getClientId_Params_Future is a wrapper for a Client_getClientId_Params promised by a client call.
type Client_getClientId_Params_Future struct{ *capnp.Future }

func (p Client_getClientId_Params_Future) Struct() (Client_getClientId_Params, error) {
	s, err := p.Future.Struct()
	return Client_getClientId_Params{s}, err
}

type Client_getClientId_Results struct{ capnp.Struct }

// Client_getClientId_Results_TypeID is the unique identifier for the type Client_getClientId_Results.
const Client_getClientId_Results_TypeID = 0xaf22fbd73458b16c

func NewClient_getClientId_Results(s *capnp.Segment) (Client_getClientId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_getClientId_Results{st}, err
}

func NewRootClient_getClientId_Results(s *capnp.Segment) (Client_getClientId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Client_getClientId_Results{st}, err
}

func ReadRootClient_getClientId_Results(msg *capnp.Message) (Client_getClientId_Results, error) {
	root, err := msg.Root()
	return Client_getClientId_Results{root.Struct()}, err
}

func (s Client_getClientId_Results) String() string {
	str, _ := text.Marshal(0xaf22fbd73458b16c, s.Struct)
	return str
}

func (s Client_getClientId_Results) ClientId() uint64 {
	return s.Struct.Uint64(0)
}

func (s Client_getClientId_Results) SetClientId(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Client_getClientId_Results_List is a list of Client_getClientId_Results.
type Client_getClientId_Results_List = capnp.StructList[Client_getClientId_Results]

// NewClient_getClientId_Results creates a new list of Client_getClientId_Results.
func NewClient_getClientId_Results_List(s *capnp.Segment, sz int32) (Client_getClientId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Client_getClientId_Results]{List: l}, err
}

// Client_getClientId_Results_Future is a wrapper for a Client_getClientId_Results promised by a client call.
type Client_getClientId_Results_Future struct{ *capnp.Future }

func (p Client_getClientId_Results_Future) Struct() (Client_getClientId_Results, error) {
	s, err := p.Future.Struct()
	return Client_getClientId_Results{s}, err
}

type Client_propose_Params struct{ capnp.Struct }

// Client_propose_Params_TypeID is the unique identifier for the type Client_propose_Params.
const Client_propose_Params_TypeID = 0xb86b8e043dd4ae9a

func NewClient_propose_Params(s *capnp.Segment) (Client_propose_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Client_propose_Params{st}, err
}

func NewRootClient_propose_Params(s *capnp.Segment) (Client_propose_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Client_propose_Params{st}, err
}

func ReadRootClient_propose_Params(msg *capnp.Message) (Client_propose_Params, error) {
	root, err := msg.Root()
	return Client_propose_Params{root.Struct()}, err
}

func (s Client_propose_Params) String() string {
	str, _ := text.Marshal(0xb86b8e043dd4ae9a, s.Struct)
	return str
}

func (s Client_propose_Params) Session() (Session, error) {
	p, err := s.Struct.Ptr(0)
	return Session{Struct: p.Struct()}, err
}

func (s Client_propose_Params) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s Client_propose_Params) SetSession(v Session) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSession sets the session field to a newly
// allocated Session struct, preferring placement in s's segment.
func (s Client_propose_Params) NewSession() (Session, error) {
	ss, err := NewSession(s.Struct.Segment())
	if err != nil {
		return Session{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Client_propose_Params) Cmd() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Client_propose_Params) HasCmd() bool {
	return s.Struct.HasPtr(1)
}

func (s Client_propose_Params) SetCmd(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Client_propose_Params) Timeout() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s Client_propose_Params) SetTimeout(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s Client_propose_Params) Synchronous() bool {
	return s.Struct.Bit(64)
}

func (s Client_propose_Params) SetSynchronous(v bool) {
	s.Struct.SetBit(64, v)
}

// Client_propose_Params_List is a list of Client_propose_Params.
type Client_propose_Params_List = capnp.StructList[Client_propose_Params]

// NewClient_propose_Params creates a new list of Client_propose_Params.
func NewClient_propose_Params_List(s *capnp.Segment, sz int32) (Client_propose_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return capnp.StructList[Client_propose_Params]{List: l}, err
}

// Client_propose_Params_Future is a wrapper for a Client_propose_Params promised by a client call.
type Client_propose_Params_Future struct{ *capnp.Future }

func (p Client_propose_Params_Future) Struct() (Client_propose_Params, error) {
	s, err := p.Future.Struct()
	return Client_propose_Params{s}, err
}

func (p Client_propose_Params_Future) Session() Session_Future {
	return Session_Future{Future: p.Future.Field(0, nil)}
}

type Client_propose_Results struct{ capnp.Struct }

// Client_propose_Results_TypeID is the unique identifier for the type Client_propose_Results.
const Client_propose_Results_TypeID = 0x96916098652fab6a

func NewClient_propose_Results(s *capnp.Segment) (Client_propose_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_propose_Results{st}, err
}

func NewRootClient_propose_Results(s *capnp.Segment) (Client_propose_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_propose_Results{st}, err
}

func ReadRootClient_propose_Results(msg *capnp.Message) (Client_propose_Results, error) {
	root, err := msg.Root()
	return Client_propose_Results{root.Struct()}, err
}

func (s Client_propose_Results) String() string {
	str, _ := text.Marshal(0x96916098652fab6a, s.Struct)
	return str
}

func (s Client_propose_Results) Response() RequestResult {
	p, _ := s.Struct.Ptr(0)
	return RequestResult{Client: p.Interface().Client()}
}

func (s Client_propose_Results) HasResponse() bool {
	return s.Struct.HasPtr(0)
}

func (s Client_propose_Results) SetResponse(v RequestResult) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Client_propose_Results_List is a list of Client_propose_Results.
type Client_propose_Results_List = capnp.StructList[Client_propose_Results]

// NewClient_propose_Results creates a new list of Client_propose_Results.
func NewClient_propose_Results_List(s *capnp.Segment, sz int32) (Client_propose_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Client_propose_Results]{List: l}, err
}

// Client_propose_Results_Future is a wrapper for a Client_propose_Results promised by a client call.
type Client_propose_Results_Future struct{ *capnp.Future }

func (p Client_propose_Results_Future) Struct() (Client_propose_Results, error) {
	s, err := p.Future.Struct()
	return Client_propose_Results{s}, err
}

func (p Client_propose_Results_Future) Response() RequestResult {
	return RequestResult{Client: p.Future.Field(0, nil).Client()}
}

type Client_read_Params struct{ capnp.Struct }

// Client_read_Params_TypeID is the unique identifier for the type Client_read_Params.
const Client_read_Params_TypeID = 0xc2795e6d79ecdb04

func NewClient_read_Params(s *capnp.Segment) (Client_read_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_read_Params{st}, err
}

func NewRootClient_read_Params(s *capnp.Segment) (Client_read_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_read_Params{st}, err
}

func ReadRootClient_read_Params(msg *capnp.Message) (Client_read_Params, error) {
	root, err := msg.Root()
	return Client_read_Params{root.Struct()}, err
}

func (s Client_read_Params) String() string {
	str, _ := text.Marshal(0xc2795e6d79ecdb04, s.Struct)
	return str
}

func (s Client_read_Params) Query() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Client_read_Params) HasQuery() bool {
	return s.Struct.HasPtr(0)
}

func (s Client_read_Params) SetQuery(v []byte) error {
	return s.Struct.SetData(0, v)
}

// Client_read_Params_List is a list of Client_read_Params.
type Client_read_Params_List = capnp.StructList[Client_read_Params]

// NewClient_read_Params creates a new list of Client_read_Params.
func NewClient_read_Params_List(s *capnp.Segment, sz int32) (Client_read_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Client_read_Params]{List: l}, err
}

// Client_read_Params_Future is a wrapper for a Client_read_Params promised by a client call.
type Client_read_Params_Future struct{ *capnp.Future }

func (p Client_read_Params_Future) Struct() (Client_read_Params, error) {
	s, err := p.Future.Struct()
	return Client_read_Params{s}, err
}

type Client_read_Results struct{ capnp.Struct }

// Client_read_Results_TypeID is the unique identifier for the type Client_read_Results.
const Client_read_Results_TypeID = 0xe0ee670b3f3cce5e

func NewClient_read_Results(s *capnp.Segment) (Client_read_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_read_Results{st}, err
}

func NewRootClient_read_Results(s *capnp.Segment) (Client_read_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Client_read_Results{st}, err
}

func ReadRootClient_read_Results(msg *capnp.Message) (Client_read_Results, error) {
	root, err := msg.Root()
	return Client_read_Results{root.Struct()}, err
}

func (s Client_read_Results) String() string {
	str, _ := text.Marshal(0xe0ee670b3f3cce5e, s.Struct)
	return str
}

func (s Client_read_Results) Payload() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Client_read_Results) HasPayload() bool {
	return s.Struct.HasPtr(0)
}

func (s Client_read_Results) SetPayload(v []byte) error {
	return s.Struct.SetData(0, v)
}

// Client_read_Results_List is a list of Client_read_Results.
type Client_read_Results_List = capnp.StructList[Client_read_Results]

// NewClient_read_Results creates a new list of Client_read_Results.
func NewClient_read_Results_List(s *capnp.Segment, sz int32) (Client_read_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Client_read_Results]{List: l}, err
}

// Client_read_Results_Future is a wrapper for a Client_read_Results promised by a client call.
type Client_read_Results_Future struct{ *capnp.Future }

func (p Client_read_Results_Future) Struct() (Client_read_Results, error) {
	s, err := p.Future.Struct()
	return Client_read_Results{s}, err
}

// Session is a client-facing database session
type Session struct{ capnp.Struct }

// Session_TypeID is the unique identifier for the type Session.
const Session_TypeID = 0xbb0748b8b81c5da8

func NewSession(s *capnp.Segment) (Session, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Session{st}, err
}

func NewRootSession(s *capnp.Segment) (Session, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Session{st}, err
}

func ReadRootSession(msg *capnp.Message) (Session, error) {
	root, err := msg.Root()
	return Session{root.Struct()}, err
}

func (s Session) String() string {
	str, _ := text.Marshal(0xbb0748b8b81c5da8, s.Struct)
	return str
}

func (s Session) ClusterId() uint64 {
	return s.Struct.Uint64(0)
}

func (s Session) SetClusterId(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Session) ClientId() uint64 {
	return s.Struct.Uint64(8)
}

func (s Session) SetClientId(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Session) SeriesId() uint64 {
	return s.Struct.Uint64(16)
}

func (s Session) SetSeriesId(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s Session) RespondedTo() uint64 {
	return s.Struct.Uint64(24)
}

func (s Session) SetRespondedTo(v uint64) {
	s.Struct.SetUint64(24, v)
}

// Session_List is a list of Session.
type Session_List = capnp.StructList[Session]

// NewSession creates a new list of Session.
func NewSession_List(s *capnp.Segment, sz int32) (Session_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0}, sz)
	return capnp.StructList[Session]{List: l}, err
}

// Session_Future is a wrapper for a Session promised by a client call.
type Session_Future struct{ *capnp.Future }

func (p Session_Future) Struct() (Session, error) {
	s, err := p.Future.Struct()
	return Session{s}, err
}

type RequestState struct{ Client capnp.Client }

// RequestState_TypeID is the unique identifier for the type RequestState.
const RequestState_TypeID = 0xb3cd040205e8ec8c

func (c RequestState) Completed(ctx context.Context, params func(RequestState_completed_Params) error) (RequestState_completed_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb3cd040205e8ec8c,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:RequestState",
			MethodName:    "completed",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestState_completed_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestState_completed_Results_Future{Future: ans.Future()}, release
}

func (c RequestState) AddRef() RequestState {
	return RequestState{
		Client: c.Client.AddRef(),
	}
}

func (c RequestState) Release() {
	c.Client.Release()
}

// A RequestState_Server is a RequestState with a local implementation.
type RequestState_Server interface {
	Completed(context.Context, RequestState_completed) error
}

// RequestState_NewServer creates a new Server from an implementation of RequestState_Server.
func RequestState_NewServer(s RequestState_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(RequestState_Methods(nil, s), s, c, policy)
}

// RequestState_ServerToClient creates a new Client from an implementation of RequestState_Server.
// The caller is responsible for calling Release on the returned Client.
func RequestState_ServerToClient(s RequestState_Server, policy *server.Policy) RequestState {
	return RequestState{Client: capnp.NewClient(RequestState_NewServer(s, policy))}
}

// RequestState_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func RequestState_Methods(methods []server.Method, s RequestState_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb3cd040205e8ec8c,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:RequestState",
			MethodName:    "completed",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Completed(ctx, RequestState_completed{call})
		},
	})

	return methods
}

// RequestState_completed holds the state for a server call to RequestState.completed.
// See server.Call for documentation.
type RequestState_completed struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestState_completed) Args() RequestState_completed_Params {
	return RequestState_completed_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestState_completed) AllocResults() (RequestState_completed_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestState_completed_Results{Struct: r}, err
}

// RequestState_List is a list of RequestState.
type RequestState_List = capnp.CapList[RequestState]

// NewRequestState creates a new list of RequestState.
func NewRequestState_List(s *capnp.Segment, sz int32) (RequestState_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[RequestState](l), err
}

type RequestState_completed_Params struct{ capnp.Struct }

// RequestState_completed_Params_TypeID is the unique identifier for the type RequestState_completed_Params.
const RequestState_completed_Params_TypeID = 0xc97cc7cf1d494ce1

func NewRequestState_completed_Params(s *capnp.Segment) (RequestState_completed_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestState_completed_Params{st}, err
}

func NewRootRequestState_completed_Params(s *capnp.Segment) (RequestState_completed_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestState_completed_Params{st}, err
}

func ReadRootRequestState_completed_Params(msg *capnp.Message) (RequestState_completed_Params, error) {
	root, err := msg.Root()
	return RequestState_completed_Params{root.Struct()}, err
}

func (s RequestState_completed_Params) String() string {
	str, _ := text.Marshal(0xc97cc7cf1d494ce1, s.Struct)
	return str
}

// RequestState_completed_Params_List is a list of RequestState_completed_Params.
type RequestState_completed_Params_List = capnp.StructList[RequestState_completed_Params]

// NewRequestState_completed_Params creates a new list of RequestState_completed_Params.
func NewRequestState_completed_Params_List(s *capnp.Segment, sz int32) (RequestState_completed_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestState_completed_Params]{List: l}, err
}

// RequestState_completed_Params_Future is a wrapper for a RequestState_completed_Params promised by a client call.
type RequestState_completed_Params_Future struct{ *capnp.Future }

func (p RequestState_completed_Params_Future) Struct() (RequestState_completed_Params, error) {
	s, err := p.Future.Struct()
	return RequestState_completed_Params{s}, err
}

type RequestState_completed_Results struct{ capnp.Struct }

// RequestState_completed_Results_TypeID is the unique identifier for the type RequestState_completed_Results.
const RequestState_completed_Results_TypeID = 0x85f942024bf84ecf

func NewRequestState_completed_Results(s *capnp.Segment) (RequestState_completed_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestState_completed_Results{st}, err
}

func NewRootRequestState_completed_Results(s *capnp.Segment) (RequestState_completed_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestState_completed_Results{st}, err
}

func ReadRootRequestState_completed_Results(msg *capnp.Message) (RequestState_completed_Results, error) {
	root, err := msg.Root()
	return RequestState_completed_Results{root.Struct()}, err
}

func (s RequestState_completed_Results) String() string {
	str, _ := text.Marshal(0x85f942024bf84ecf, s.Struct)
	return str
}

func (s RequestState_completed_Results) Iterator() RequestResultIterator {
	p, _ := s.Struct.Ptr(0)
	return RequestResultIterator{Client: p.Interface().Client()}
}

func (s RequestState_completed_Results) HasIterator() bool {
	return s.Struct.HasPtr(0)
}

func (s RequestState_completed_Results) SetIterator(v RequestResultIterator) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// RequestState_completed_Results_List is a list of RequestState_completed_Results.
type RequestState_completed_Results_List = capnp.StructList[RequestState_completed_Results]

// NewRequestState_completed_Results creates a new list of RequestState_completed_Results.
func NewRequestState_completed_Results_List(s *capnp.Segment, sz int32) (RequestState_completed_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[RequestState_completed_Results]{List: l}, err
}

// RequestState_completed_Results_Future is a wrapper for a RequestState_completed_Results promised by a client call.
type RequestState_completed_Results_Future struct{ *capnp.Future }

func (p RequestState_completed_Results_Future) Struct() (RequestState_completed_Results, error) {
	s, err := p.Future.Struct()
	return RequestState_completed_Results{s}, err
}

func (p RequestState_completed_Results_Future) Iterator() RequestResultIterator {
	return RequestResultIterator{Client: p.Future.Field(0, nil).Client()}
}

type RequestResult struct{ Client capnp.Client }

// RequestResult_TypeID is the unique identifier for the type RequestResult.
const RequestResult_TypeID = 0x83bb5f78b82ac5dc

func (c RequestResult) Completed(ctx context.Context, params func(RequestResult_completed_Params) error) (RequestResult_completed_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "completed",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestResult_completed_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestResult_completed_Results_Future{Future: ans.Future()}, release
}
func (c RequestResult) GetResult(ctx context.Context, params func(RequestResult_getResult_Params) error) (RequestResult_getResult_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      1,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "getResult",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestResult_getResult_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestResult_getResult_Results_Future{Future: ans.Future()}, release
}
func (c RequestResult) Rejected(ctx context.Context, params func(RequestResult_rejected_Params) error) (RequestResult_rejected_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      2,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "rejected",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestResult_rejected_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestResult_rejected_Results_Future{Future: ans.Future()}, release
}
func (c RequestResult) Terminated(ctx context.Context, params func(RequestResult_terminated_Params) error) (RequestResult_terminated_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      3,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "terminated",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestResult_terminated_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestResult_terminated_Results_Future{Future: ans.Future()}, release
}
func (c RequestResult) Timeout(ctx context.Context, params func(RequestResult_timeout_Params) error) (RequestResult_timeout_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      4,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "timeout",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestResult_timeout_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestResult_timeout_Results_Future{Future: ans.Future()}, release
}

func (c RequestResult) AddRef() RequestResult {
	return RequestResult{
		Client: c.Client.AddRef(),
	}
}

func (c RequestResult) Release() {
	c.Client.Release()
}

// A RequestResult_Server is a RequestResult with a local implementation.
type RequestResult_Server interface {
	Completed(context.Context, RequestResult_completed) error

	GetResult(context.Context, RequestResult_getResult) error

	Rejected(context.Context, RequestResult_rejected) error

	Terminated(context.Context, RequestResult_terminated) error

	Timeout(context.Context, RequestResult_timeout) error
}

// RequestResult_NewServer creates a new Server from an implementation of RequestResult_Server.
func RequestResult_NewServer(s RequestResult_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(RequestResult_Methods(nil, s), s, c, policy)
}

// RequestResult_ServerToClient creates a new Client from an implementation of RequestResult_Server.
// The caller is responsible for calling Release on the returned Client.
func RequestResult_ServerToClient(s RequestResult_Server, policy *server.Policy) RequestResult {
	return RequestResult{Client: capnp.NewClient(RequestResult_NewServer(s, policy))}
}

// RequestResult_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func RequestResult_Methods(methods []server.Method, s RequestResult_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "completed",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Completed(ctx, RequestResult_completed{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      1,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "getResult",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetResult(ctx, RequestResult_getResult{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      2,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "rejected",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Rejected(ctx, RequestResult_rejected{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      3,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "terminated",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Terminated(ctx, RequestResult_terminated{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83bb5f78b82ac5dc,
			MethodID:      4,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResult",
			MethodName:    "timeout",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Timeout(ctx, RequestResult_timeout{call})
		},
	})

	return methods
}

// RequestResult_completed holds the state for a server call to RequestResult.completed.
// See server.Call for documentation.
type RequestResult_completed struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestResult_completed) Args() RequestResult_completed_Params {
	return RequestResult_completed_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestResult_completed) AllocResults() (RequestResult_completed_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_completed_Results{Struct: r}, err
}

// RequestResult_getResult holds the state for a server call to RequestResult.getResult.
// See server.Call for documentation.
type RequestResult_getResult struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestResult_getResult) Args() RequestResult_getResult_Params {
	return RequestResult_getResult_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestResult_getResult) AllocResults() (RequestResult_getResult_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_getResult_Results{Struct: r}, err
}

// RequestResult_rejected holds the state for a server call to RequestResult.rejected.
// See server.Call for documentation.
type RequestResult_rejected struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestResult_rejected) Args() RequestResult_rejected_Params {
	return RequestResult_rejected_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestResult_rejected) AllocResults() (RequestResult_rejected_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_rejected_Results{Struct: r}, err
}

// RequestResult_terminated holds the state for a server call to RequestResult.terminated.
// See server.Call for documentation.
type RequestResult_terminated struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestResult_terminated) Args() RequestResult_terminated_Params {
	return RequestResult_terminated_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestResult_terminated) AllocResults() (RequestResult_terminated_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_terminated_Results{Struct: r}, err
}

// RequestResult_timeout holds the state for a server call to RequestResult.timeout.
// See server.Call for documentation.
type RequestResult_timeout struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestResult_timeout) Args() RequestResult_timeout_Params {
	return RequestResult_timeout_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestResult_timeout) AllocResults() (RequestResult_timeout_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_timeout_Results{Struct: r}, err
}

// RequestResult_List is a list of RequestResult.
type RequestResult_List = capnp.CapList[RequestResult]

// NewRequestResult creates a new list of RequestResult.
func NewRequestResult_List(s *capnp.Segment, sz int32) (RequestResult_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[RequestResult](l), err
}

type RequestResult_completed_Params struct{ capnp.Struct }

// RequestResult_completed_Params_TypeID is the unique identifier for the type RequestResult_completed_Params.
const RequestResult_completed_Params_TypeID = 0x85d0357930685d84

func NewRequestResult_completed_Params(s *capnp.Segment) (RequestResult_completed_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_completed_Params{st}, err
}

func NewRootRequestResult_completed_Params(s *capnp.Segment) (RequestResult_completed_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_completed_Params{st}, err
}

func ReadRootRequestResult_completed_Params(msg *capnp.Message) (RequestResult_completed_Params, error) {
	root, err := msg.Root()
	return RequestResult_completed_Params{root.Struct()}, err
}

func (s RequestResult_completed_Params) String() string {
	str, _ := text.Marshal(0x85d0357930685d84, s.Struct)
	return str
}

// RequestResult_completed_Params_List is a list of RequestResult_completed_Params.
type RequestResult_completed_Params_List = capnp.StructList[RequestResult_completed_Params]

// NewRequestResult_completed_Params creates a new list of RequestResult_completed_Params.
func NewRequestResult_completed_Params_List(s *capnp.Segment, sz int32) (RequestResult_completed_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_completed_Params]{List: l}, err
}

// RequestResult_completed_Params_Future is a wrapper for a RequestResult_completed_Params promised by a client call.
type RequestResult_completed_Params_Future struct{ *capnp.Future }

func (p RequestResult_completed_Params_Future) Struct() (RequestResult_completed_Params, error) {
	s, err := p.Future.Struct()
	return RequestResult_completed_Params{s}, err
}

type RequestResult_completed_Results struct{ capnp.Struct }

// RequestResult_completed_Results_TypeID is the unique identifier for the type RequestResult_completed_Results.
const RequestResult_completed_Results_TypeID = 0xeddc53a04bd0bbe7

func NewRequestResult_completed_Results(s *capnp.Segment) (RequestResult_completed_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_completed_Results{st}, err
}

func NewRootRequestResult_completed_Results(s *capnp.Segment) (RequestResult_completed_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_completed_Results{st}, err
}

func ReadRootRequestResult_completed_Results(msg *capnp.Message) (RequestResult_completed_Results, error) {
	root, err := msg.Root()
	return RequestResult_completed_Results{root.Struct()}, err
}

func (s RequestResult_completed_Results) String() string {
	str, _ := text.Marshal(0xeddc53a04bd0bbe7, s.Struct)
	return str
}

func (s RequestResult_completed_Results) Done() bool {
	return s.Struct.Bit(0)
}

func (s RequestResult_completed_Results) SetDone(v bool) {
	s.Struct.SetBit(0, v)
}

// RequestResult_completed_Results_List is a list of RequestResult_completed_Results.
type RequestResult_completed_Results_List = capnp.StructList[RequestResult_completed_Results]

// NewRequestResult_completed_Results creates a new list of RequestResult_completed_Results.
func NewRequestResult_completed_Results_List(s *capnp.Segment, sz int32) (RequestResult_completed_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_completed_Results]{List: l}, err
}

// RequestResult_completed_Results_Future is a wrapper for a RequestResult_completed_Results promised by a client call.
type RequestResult_completed_Results_Future struct{ *capnp.Future }

func (p RequestResult_completed_Results_Future) Struct() (RequestResult_completed_Results, error) {
	s, err := p.Future.Struct()
	return RequestResult_completed_Results{s}, err
}

type RequestResult_getResult_Params struct{ capnp.Struct }

// RequestResult_getResult_Params_TypeID is the unique identifier for the type RequestResult_getResult_Params.
const RequestResult_getResult_Params_TypeID = 0xc8152b782a899bb7

func NewRequestResult_getResult_Params(s *capnp.Segment) (RequestResult_getResult_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_getResult_Params{st}, err
}

func NewRootRequestResult_getResult_Params(s *capnp.Segment) (RequestResult_getResult_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_getResult_Params{st}, err
}

func ReadRootRequestResult_getResult_Params(msg *capnp.Message) (RequestResult_getResult_Params, error) {
	root, err := msg.Root()
	return RequestResult_getResult_Params{root.Struct()}, err
}

func (s RequestResult_getResult_Params) String() string {
	str, _ := text.Marshal(0xc8152b782a899bb7, s.Struct)
	return str
}

// RequestResult_getResult_Params_List is a list of RequestResult_getResult_Params.
type RequestResult_getResult_Params_List = capnp.StructList[RequestResult_getResult_Params]

// NewRequestResult_getResult_Params creates a new list of RequestResult_getResult_Params.
func NewRequestResult_getResult_Params_List(s *capnp.Segment, sz int32) (RequestResult_getResult_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_getResult_Params]{List: l}, err
}

// RequestResult_getResult_Params_Future is a wrapper for a RequestResult_getResult_Params promised by a client call.
type RequestResult_getResult_Params_Future struct{ *capnp.Future }

func (p RequestResult_getResult_Params_Future) Struct() (RequestResult_getResult_Params, error) {
	s, err := p.Future.Struct()
	return RequestResult_getResult_Params{s}, err
}

type RequestResult_getResult_Results struct{ capnp.Struct }

// RequestResult_getResult_Results_TypeID is the unique identifier for the type RequestResult_getResult_Results.
const RequestResult_getResult_Results_TypeID = 0xcebdaa686c3b1b47

func NewRequestResult_getResult_Results(s *capnp.Segment) (RequestResult_getResult_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_getResult_Results{st}, err
}

func NewRootRequestResult_getResult_Results(s *capnp.Segment) (RequestResult_getResult_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_getResult_Results{st}, err
}

func ReadRootRequestResult_getResult_Results(msg *capnp.Message) (RequestResult_getResult_Results, error) {
	root, err := msg.Root()
	return RequestResult_getResult_Results{root.Struct()}, err
}

func (s RequestResult_getResult_Results) String() string {
	str, _ := text.Marshal(0xcebdaa686c3b1b47, s.Struct)
	return str
}

func (s RequestResult_getResult_Results) Result() uint64 {
	return s.Struct.Uint64(0)
}

func (s RequestResult_getResult_Results) SetResult(v uint64) {
	s.Struct.SetUint64(0, v)
}

// RequestResult_getResult_Results_List is a list of RequestResult_getResult_Results.
type RequestResult_getResult_Results_List = capnp.StructList[RequestResult_getResult_Results]

// NewRequestResult_getResult_Results creates a new list of RequestResult_getResult_Results.
func NewRequestResult_getResult_Results_List(s *capnp.Segment, sz int32) (RequestResult_getResult_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_getResult_Results]{List: l}, err
}

// RequestResult_getResult_Results_Future is a wrapper for a RequestResult_getResult_Results promised by a client call.
type RequestResult_getResult_Results_Future struct{ *capnp.Future }

func (p RequestResult_getResult_Results_Future) Struct() (RequestResult_getResult_Results, error) {
	s, err := p.Future.Struct()
	return RequestResult_getResult_Results{s}, err
}

type RequestResult_rejected_Params struct{ capnp.Struct }

// RequestResult_rejected_Params_TypeID is the unique identifier for the type RequestResult_rejected_Params.
const RequestResult_rejected_Params_TypeID = 0x91e683185001184f

func NewRequestResult_rejected_Params(s *capnp.Segment) (RequestResult_rejected_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_rejected_Params{st}, err
}

func NewRootRequestResult_rejected_Params(s *capnp.Segment) (RequestResult_rejected_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_rejected_Params{st}, err
}

func ReadRootRequestResult_rejected_Params(msg *capnp.Message) (RequestResult_rejected_Params, error) {
	root, err := msg.Root()
	return RequestResult_rejected_Params{root.Struct()}, err
}

func (s RequestResult_rejected_Params) String() string {
	str, _ := text.Marshal(0x91e683185001184f, s.Struct)
	return str
}

// RequestResult_rejected_Params_List is a list of RequestResult_rejected_Params.
type RequestResult_rejected_Params_List = capnp.StructList[RequestResult_rejected_Params]

// NewRequestResult_rejected_Params creates a new list of RequestResult_rejected_Params.
func NewRequestResult_rejected_Params_List(s *capnp.Segment, sz int32) (RequestResult_rejected_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_rejected_Params]{List: l}, err
}

// RequestResult_rejected_Params_Future is a wrapper for a RequestResult_rejected_Params promised by a client call.
type RequestResult_rejected_Params_Future struct{ *capnp.Future }

func (p RequestResult_rejected_Params_Future) Struct() (RequestResult_rejected_Params, error) {
	s, err := p.Future.Struct()
	return RequestResult_rejected_Params{s}, err
}

type RequestResult_rejected_Results struct{ capnp.Struct }

// RequestResult_rejected_Results_TypeID is the unique identifier for the type RequestResult_rejected_Results.
const RequestResult_rejected_Results_TypeID = 0xb3d19b3f1e109b10

func NewRequestResult_rejected_Results(s *capnp.Segment) (RequestResult_rejected_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_rejected_Results{st}, err
}

func NewRootRequestResult_rejected_Results(s *capnp.Segment) (RequestResult_rejected_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_rejected_Results{st}, err
}

func ReadRootRequestResult_rejected_Results(msg *capnp.Message) (RequestResult_rejected_Results, error) {
	root, err := msg.Root()
	return RequestResult_rejected_Results{root.Struct()}, err
}

func (s RequestResult_rejected_Results) String() string {
	str, _ := text.Marshal(0xb3d19b3f1e109b10, s.Struct)
	return str
}

func (s RequestResult_rejected_Results) Rejected() bool {
	return s.Struct.Bit(0)
}

func (s RequestResult_rejected_Results) SetRejected(v bool) {
	s.Struct.SetBit(0, v)
}

// RequestResult_rejected_Results_List is a list of RequestResult_rejected_Results.
type RequestResult_rejected_Results_List = capnp.StructList[RequestResult_rejected_Results]

// NewRequestResult_rejected_Results creates a new list of RequestResult_rejected_Results.
func NewRequestResult_rejected_Results_List(s *capnp.Segment, sz int32) (RequestResult_rejected_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_rejected_Results]{List: l}, err
}

// RequestResult_rejected_Results_Future is a wrapper for a RequestResult_rejected_Results promised by a client call.
type RequestResult_rejected_Results_Future struct{ *capnp.Future }

func (p RequestResult_rejected_Results_Future) Struct() (RequestResult_rejected_Results, error) {
	s, err := p.Future.Struct()
	return RequestResult_rejected_Results{s}, err
}

type RequestResult_terminated_Params struct{ capnp.Struct }

// RequestResult_terminated_Params_TypeID is the unique identifier for the type RequestResult_terminated_Params.
const RequestResult_terminated_Params_TypeID = 0xcc2ba4768c165bb5

func NewRequestResult_terminated_Params(s *capnp.Segment) (RequestResult_terminated_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_terminated_Params{st}, err
}

func NewRootRequestResult_terminated_Params(s *capnp.Segment) (RequestResult_terminated_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_terminated_Params{st}, err
}

func ReadRootRequestResult_terminated_Params(msg *capnp.Message) (RequestResult_terminated_Params, error) {
	root, err := msg.Root()
	return RequestResult_terminated_Params{root.Struct()}, err
}

func (s RequestResult_terminated_Params) String() string {
	str, _ := text.Marshal(0xcc2ba4768c165bb5, s.Struct)
	return str
}

// RequestResult_terminated_Params_List is a list of RequestResult_terminated_Params.
type RequestResult_terminated_Params_List = capnp.StructList[RequestResult_terminated_Params]

// NewRequestResult_terminated_Params creates a new list of RequestResult_terminated_Params.
func NewRequestResult_terminated_Params_List(s *capnp.Segment, sz int32) (RequestResult_terminated_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_terminated_Params]{List: l}, err
}

// RequestResult_terminated_Params_Future is a wrapper for a RequestResult_terminated_Params promised by a client call.
type RequestResult_terminated_Params_Future struct{ *capnp.Future }

func (p RequestResult_terminated_Params_Future) Struct() (RequestResult_terminated_Params, error) {
	s, err := p.Future.Struct()
	return RequestResult_terminated_Params{s}, err
}

type RequestResult_terminated_Results struct{ capnp.Struct }

// RequestResult_terminated_Results_TypeID is the unique identifier for the type RequestResult_terminated_Results.
const RequestResult_terminated_Results_TypeID = 0x9c40e01c6c4d6a8c

func NewRequestResult_terminated_Results(s *capnp.Segment) (RequestResult_terminated_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_terminated_Results{st}, err
}

func NewRootRequestResult_terminated_Results(s *capnp.Segment) (RequestResult_terminated_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_terminated_Results{st}, err
}

func ReadRootRequestResult_terminated_Results(msg *capnp.Message) (RequestResult_terminated_Results, error) {
	root, err := msg.Root()
	return RequestResult_terminated_Results{root.Struct()}, err
}

func (s RequestResult_terminated_Results) String() string {
	str, _ := text.Marshal(0x9c40e01c6c4d6a8c, s.Struct)
	return str
}

func (s RequestResult_terminated_Results) Terminated() bool {
	return s.Struct.Bit(0)
}

func (s RequestResult_terminated_Results) SetTerminated(v bool) {
	s.Struct.SetBit(0, v)
}

// RequestResult_terminated_Results_List is a list of RequestResult_terminated_Results.
type RequestResult_terminated_Results_List = capnp.StructList[RequestResult_terminated_Results]

// NewRequestResult_terminated_Results creates a new list of RequestResult_terminated_Results.
func NewRequestResult_terminated_Results_List(s *capnp.Segment, sz int32) (RequestResult_terminated_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_terminated_Results]{List: l}, err
}

// RequestResult_terminated_Results_Future is a wrapper for a RequestResult_terminated_Results promised by a client call.
type RequestResult_terminated_Results_Future struct{ *capnp.Future }

func (p RequestResult_terminated_Results_Future) Struct() (RequestResult_terminated_Results, error) {
	s, err := p.Future.Struct()
	return RequestResult_terminated_Results{s}, err
}

type RequestResult_timeout_Params struct{ capnp.Struct }

// RequestResult_timeout_Params_TypeID is the unique identifier for the type RequestResult_timeout_Params.
const RequestResult_timeout_Params_TypeID = 0xbbb54198780ac37c

func NewRequestResult_timeout_Params(s *capnp.Segment) (RequestResult_timeout_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_timeout_Params{st}, err
}

func NewRootRequestResult_timeout_Params(s *capnp.Segment) (RequestResult_timeout_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResult_timeout_Params{st}, err
}

func ReadRootRequestResult_timeout_Params(msg *capnp.Message) (RequestResult_timeout_Params, error) {
	root, err := msg.Root()
	return RequestResult_timeout_Params{root.Struct()}, err
}

func (s RequestResult_timeout_Params) String() string {
	str, _ := text.Marshal(0xbbb54198780ac37c, s.Struct)
	return str
}

// RequestResult_timeout_Params_List is a list of RequestResult_timeout_Params.
type RequestResult_timeout_Params_List = capnp.StructList[RequestResult_timeout_Params]

// NewRequestResult_timeout_Params creates a new list of RequestResult_timeout_Params.
func NewRequestResult_timeout_Params_List(s *capnp.Segment, sz int32) (RequestResult_timeout_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_timeout_Params]{List: l}, err
}

// RequestResult_timeout_Params_Future is a wrapper for a RequestResult_timeout_Params promised by a client call.
type RequestResult_timeout_Params_Future struct{ *capnp.Future }

func (p RequestResult_timeout_Params_Future) Struct() (RequestResult_timeout_Params, error) {
	s, err := p.Future.Struct()
	return RequestResult_timeout_Params{s}, err
}

type RequestResult_timeout_Results struct{ capnp.Struct }

// RequestResult_timeout_Results_TypeID is the unique identifier for the type RequestResult_timeout_Results.
const RequestResult_timeout_Results_TypeID = 0xd9566d254aeca44d

func NewRequestResult_timeout_Results(s *capnp.Segment) (RequestResult_timeout_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_timeout_Results{st}, err
}

func NewRootRequestResult_timeout_Results(s *capnp.Segment) (RequestResult_timeout_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResult_timeout_Results{st}, err
}

func ReadRootRequestResult_timeout_Results(msg *capnp.Message) (RequestResult_timeout_Results, error) {
	root, err := msg.Root()
	return RequestResult_timeout_Results{root.Struct()}, err
}

func (s RequestResult_timeout_Results) String() string {
	str, _ := text.Marshal(0xd9566d254aeca44d, s.Struct)
	return str
}

func (s RequestResult_timeout_Results) Timedout() bool {
	return s.Struct.Bit(0)
}

func (s RequestResult_timeout_Results) SetTimedout(v bool) {
	s.Struct.SetBit(0, v)
}

// RequestResult_timeout_Results_List is a list of RequestResult_timeout_Results.
type RequestResult_timeout_Results_List = capnp.StructList[RequestResult_timeout_Results]

// NewRequestResult_timeout_Results creates a new list of RequestResult_timeout_Results.
func NewRequestResult_timeout_Results_List(s *capnp.Segment, sz int32) (RequestResult_timeout_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[RequestResult_timeout_Results]{List: l}, err
}

// RequestResult_timeout_Results_Future is a wrapper for a RequestResult_timeout_Results promised by a client call.
type RequestResult_timeout_Results_Future struct{ *capnp.Future }

func (p RequestResult_timeout_Results_Future) Struct() (RequestResult_timeout_Results, error) {
	s, err := p.Future.Struct()
	return RequestResult_timeout_Results{s}, err
}

type RequestResultIterator struct{ Client capnp.Client }

// RequestResultIterator_TypeID is the unique identifier for the type RequestResultIterator.
const RequestResultIterator_TypeID = 0xba9a01628ce6fb28

func (c RequestResultIterator) Get(ctx context.Context, params func(RequestResultIterator_get_Params) error) (RequestResultIterator_get_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xba9a01628ce6fb28,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResultIterator",
			MethodName:    "get",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestResultIterator_get_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestResultIterator_get_Results_Future{Future: ans.Future()}, release
}
func (c RequestResultIterator) Next(ctx context.Context, params func(RequestResultIterator_next_Params) error) (RequestResultIterator_next_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xba9a01628ce6fb28,
			MethodID:      1,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResultIterator",
			MethodName:    "next",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RequestResultIterator_next_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return RequestResultIterator_next_Results_Future{Future: ans.Future()}, release
}

func (c RequestResultIterator) AddRef() RequestResultIterator {
	return RequestResultIterator{
		Client: c.Client.AddRef(),
	}
}

func (c RequestResultIterator) Release() {
	c.Client.Release()
}

// A RequestResultIterator_Server is a RequestResultIterator with a local implementation.
type RequestResultIterator_Server interface {
	Get(context.Context, RequestResultIterator_get) error

	Next(context.Context, RequestResultIterator_next) error
}

// RequestResultIterator_NewServer creates a new Server from an implementation of RequestResultIterator_Server.
func RequestResultIterator_NewServer(s RequestResultIterator_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(RequestResultIterator_Methods(nil, s), s, c, policy)
}

// RequestResultIterator_ServerToClient creates a new Client from an implementation of RequestResultIterator_Server.
// The caller is responsible for calling Release on the returned Client.
func RequestResultIterator_ServerToClient(s RequestResultIterator_Server, policy *server.Policy) RequestResultIterator {
	return RequestResultIterator{Client: capnp.NewClient(RequestResultIterator_NewServer(s, policy))}
}

// RequestResultIterator_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func RequestResultIterator_Methods(methods []server.Method, s RequestResultIterator_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xba9a01628ce6fb28,
			MethodID:      0,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResultIterator",
			MethodName:    "get",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Get(ctx, RequestResultIterator_get{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xba9a01628ce6fb28,
			MethodID:      1,
			InterfaceName: "protocols/v1/database/client.capnp:RequestResultIterator",
			MethodName:    "next",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Next(ctx, RequestResultIterator_next{call})
		},
	})

	return methods
}

// RequestResultIterator_get holds the state for a server call to RequestResultIterator.get.
// See server.Call for documentation.
type RequestResultIterator_get struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestResultIterator_get) Args() RequestResultIterator_get_Params {
	return RequestResultIterator_get_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestResultIterator_get) AllocResults() (RequestResultIterator_get_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestResultIterator_get_Results{Struct: r}, err
}

// RequestResultIterator_next holds the state for a server call to RequestResultIterator.next.
// See server.Call for documentation.
type RequestResultIterator_next struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RequestResultIterator_next) Args() RequestResultIterator_next_Params {
	return RequestResultIterator_next_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RequestResultIterator_next) AllocResults() (RequestResultIterator_next_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResultIterator_next_Results{Struct: r}, err
}

// RequestResultIterator_List is a list of RequestResultIterator.
type RequestResultIterator_List = capnp.CapList[RequestResultIterator]

// NewRequestResultIterator creates a new list of RequestResultIterator.
func NewRequestResultIterator_List(s *capnp.Segment, sz int32) (RequestResultIterator_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[RequestResultIterator](l), err
}

type RequestResultIterator_get_Params struct{ capnp.Struct }

// RequestResultIterator_get_Params_TypeID is the unique identifier for the type RequestResultIterator_get_Params.
const RequestResultIterator_get_Params_TypeID = 0xc274e04de97bea40

func NewRequestResultIterator_get_Params(s *capnp.Segment) (RequestResultIterator_get_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResultIterator_get_Params{st}, err
}

func NewRootRequestResultIterator_get_Params(s *capnp.Segment) (RequestResultIterator_get_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResultIterator_get_Params{st}, err
}

func ReadRootRequestResultIterator_get_Params(msg *capnp.Message) (RequestResultIterator_get_Params, error) {
	root, err := msg.Root()
	return RequestResultIterator_get_Params{root.Struct()}, err
}

func (s RequestResultIterator_get_Params) String() string {
	str, _ := text.Marshal(0xc274e04de97bea40, s.Struct)
	return str
}

// RequestResultIterator_get_Params_List is a list of RequestResultIterator_get_Params.
type RequestResultIterator_get_Params_List = capnp.StructList[RequestResultIterator_get_Params]

// NewRequestResultIterator_get_Params creates a new list of RequestResultIterator_get_Params.
func NewRequestResultIterator_get_Params_List(s *capnp.Segment, sz int32) (RequestResultIterator_get_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestResultIterator_get_Params]{List: l}, err
}

// RequestResultIterator_get_Params_Future is a wrapper for a RequestResultIterator_get_Params promised by a client call.
type RequestResultIterator_get_Params_Future struct{ *capnp.Future }

func (p RequestResultIterator_get_Params_Future) Struct() (RequestResultIterator_get_Params, error) {
	s, err := p.Future.Struct()
	return RequestResultIterator_get_Params{s}, err
}

type RequestResultIterator_get_Results struct{ capnp.Struct }

// RequestResultIterator_get_Results_TypeID is the unique identifier for the type RequestResultIterator_get_Results.
const RequestResultIterator_get_Results_TypeID = 0xcdd1115f494e323f

func NewRequestResultIterator_get_Results(s *capnp.Segment) (RequestResultIterator_get_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestResultIterator_get_Results{st}, err
}

func NewRootRequestResultIterator_get_Results(s *capnp.Segment) (RequestResultIterator_get_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestResultIterator_get_Results{st}, err
}

func ReadRootRequestResultIterator_get_Results(msg *capnp.Message) (RequestResultIterator_get_Results, error) {
	root, err := msg.Root()
	return RequestResultIterator_get_Results{root.Struct()}, err
}

func (s RequestResultIterator_get_Results) String() string {
	str, _ := text.Marshal(0xcdd1115f494e323f, s.Struct)
	return str
}

func (s RequestResultIterator_get_Results) Value() RequestResult {
	p, _ := s.Struct.Ptr(0)
	return RequestResult{Client: p.Interface().Client()}
}

func (s RequestResultIterator_get_Results) HasValue() bool {
	return s.Struct.HasPtr(0)
}

func (s RequestResultIterator_get_Results) SetValue(v RequestResult) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// RequestResultIterator_get_Results_List is a list of RequestResultIterator_get_Results.
type RequestResultIterator_get_Results_List = capnp.StructList[RequestResultIterator_get_Results]

// NewRequestResultIterator_get_Results creates a new list of RequestResultIterator_get_Results.
func NewRequestResultIterator_get_Results_List(s *capnp.Segment, sz int32) (RequestResultIterator_get_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[RequestResultIterator_get_Results]{List: l}, err
}

// RequestResultIterator_get_Results_Future is a wrapper for a RequestResultIterator_get_Results promised by a client call.
type RequestResultIterator_get_Results_Future struct{ *capnp.Future }

func (p RequestResultIterator_get_Results_Future) Struct() (RequestResultIterator_get_Results, error) {
	s, err := p.Future.Struct()
	return RequestResultIterator_get_Results{s}, err
}

func (p RequestResultIterator_get_Results_Future) Value() RequestResult {
	return RequestResult{Client: p.Future.Field(0, nil).Client()}
}

type RequestResultIterator_next_Params struct{ capnp.Struct }

// RequestResultIterator_next_Params_TypeID is the unique identifier for the type RequestResultIterator_next_Params.
const RequestResultIterator_next_Params_TypeID = 0xef0839ef989af4dc

func NewRequestResultIterator_next_Params(s *capnp.Segment) (RequestResultIterator_next_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResultIterator_next_Params{st}, err
}

func NewRootRequestResultIterator_next_Params(s *capnp.Segment) (RequestResultIterator_next_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RequestResultIterator_next_Params{st}, err
}

func ReadRootRequestResultIterator_next_Params(msg *capnp.Message) (RequestResultIterator_next_Params, error) {
	root, err := msg.Root()
	return RequestResultIterator_next_Params{root.Struct()}, err
}

func (s RequestResultIterator_next_Params) String() string {
	str, _ := text.Marshal(0xef0839ef989af4dc, s.Struct)
	return str
}

// RequestResultIterator_next_Params_List is a list of RequestResultIterator_next_Params.
type RequestResultIterator_next_Params_List = capnp.StructList[RequestResultIterator_next_Params]

// NewRequestResultIterator_next_Params creates a new list of RequestResultIterator_next_Params.
func NewRequestResultIterator_next_Params_List(s *capnp.Segment, sz int32) (RequestResultIterator_next_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[RequestResultIterator_next_Params]{List: l}, err
}

// RequestResultIterator_next_Params_Future is a wrapper for a RequestResultIterator_next_Params promised by a client call.
type RequestResultIterator_next_Params_Future struct{ *capnp.Future }

func (p RequestResultIterator_next_Params_Future) Struct() (RequestResultIterator_next_Params, error) {
	s, err := p.Future.Struct()
	return RequestResultIterator_next_Params{s}, err
}

type RequestResultIterator_next_Results struct{ capnp.Struct }

// RequestResultIterator_next_Results_TypeID is the unique identifier for the type RequestResultIterator_next_Results.
const RequestResultIterator_next_Results_TypeID = 0xc88962474842fc67

func NewRequestResultIterator_next_Results(s *capnp.Segment) (RequestResultIterator_next_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResultIterator_next_Results{st}, err
}

func NewRootRequestResultIterator_next_Results(s *capnp.Segment) (RequestResultIterator_next_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RequestResultIterator_next_Results{st}, err
}

func ReadRootRequestResultIterator_next_Results(msg *capnp.Message) (RequestResultIterator_next_Results, error) {
	root, err := msg.Root()
	return RequestResultIterator_next_Results{root.Struct()}, err
}

func (s RequestResultIterator_next_Results) String() string {
	str, _ := text.Marshal(0xc88962474842fc67, s.Struct)
	return str
}

func (s RequestResultIterator_next_Results) More() bool {
	return s.Struct.Bit(0)
}

func (s RequestResultIterator_next_Results) SetMore(v bool) {
	s.Struct.SetBit(0, v)
}

// RequestResultIterator_next_Results_List is a list of RequestResultIterator_next_Results.
type RequestResultIterator_next_Results_List = capnp.StructList[RequestResultIterator_next_Results]

// NewRequestResultIterator_next_Results creates a new list of RequestResultIterator_next_Results.
func NewRequestResultIterator_next_Results_List(s *capnp.Segment, sz int32) (RequestResultIterator_next_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[RequestResultIterator_next_Results]{List: l}, err
}

// RequestResultIterator_next_Results_Future is a wrapper for a RequestResultIterator_next_Results promised by a client call.
type RequestResultIterator_next_Results_Future struct{ *capnp.Future }

func (p RequestResultIterator_next_Results_Future) Struct() (RequestResultIterator_next_Results, error) {
	s, err := p.Future.Struct()
	return RequestResultIterator_next_Results{s}, err
}

const schema_882cc5e81e24c654 = "x\xda\xacWal\x1c\xd5\x11\x9e\xd9\xddc\xefl\xaf" +
	"\xed\xc7\x9a\x92\x14Bl\x13\xa4\xc648\x0e\xf8\x87i" +
	"#\x9f]U\xc1\xa1\xa6^\x07\xaa6%\x81\xf5\xdd\xc3" +
	"\xbe\xf4\xee\xf6|\xbb\x97\xd8\"(\xa2\x80\xa8QT)" +
	"EFQR\xd4\xfe\xe0G\x00\xb5U\x8a\x10)\x11?" +
	"\x9a6-D\x0d\x90\x96\x96\xa2\xa4Rh\xa5@\xa3\xb8" +
	"Hi\xa9\x80\xb4\xddj\xde\xde[\xef\xd9Gbo\xfb" +
	"\xcb\xbe{\xf3f\xe6\xcd7\xf3\xcdw\xebW&\xd2Z" +
	"\x8f\xb1\xab\x19\x14\xebP\xe2*\xff\xcc\xf1\xae#S\xf7" +
	"\x1d}\x04\xd8\x8d\xaa\x7f\xf7\xaf\xd6\xdc\xf0\xfe\xf1\xcf\x7f" +
	"\x07\x00o\xed\xd0\x9f@\xb3O\xd7\x01n\xed\xd57\xa1" +
	"i$u\x00\xff\xd1m\x13\xeb\xa7{\xdf|\x0cX\x0f" +
	"\x02ht\xfa\xa1~\xb5\x02\x9a\xff\xc6]\x1f\xdd\xa9\x0c" +
	"~\xfc\x18\xb0\xf5\x08\x90@:\x9a\xa3#4\x13\xc9~" +
	"@\xff\xab+pd\xc5#\xe7\xf6E\xae\xaeM6\xd0" +
	"\xd5\x1d\xcfw\xf3\xfd\xf7\xef{\x0aXWx\xb5#\xf9" +
	"[\x044{\xc5\xd5\xbd;\x86\xf3\xd7\x9fM\x7f\x1f\xac" +
	"\x1e\x94w\xbf\x91\xec$\xdf\x93\xc2\xe0\xd0\xf3\xa7\x9f:" +
	"\xd8\xf2\xf7\xe7\xa2\x1ef\x93\xe7\xc9\xc3\xb3\xc2 \x7f\xf8" +
	"\xeb\xb7\xbd}\xa9\xf3'`u\x85\x1e^K^$\x83" +
	"?\x09\x83\xa6\x81\x91\x81\xdb~w\xdd\xe1\xa8\x07L\x09" +
	"\x83kR\"\x87\x0b\xef'\x14\xed\xe4\x0b\x8b\x0a\xd5\x9b" +
	"\xfa6\x9aC)\x1d\xc0\xfcrj\x939I\xff\xf9\xad" +
	"\x07[o\xe8?x\xea\x85\x9a\x8cS\xa2\x1a\x93\xc2\xdd" +
	"\xf7\xee\xbd\xb4\xee\xa3cs/E\x13\x9aM}\"2" +
	"\x16\x06\x07~\xfc\xd6F\xed\xbb\xdf:B\x06\x0a@B" +
	"!\x8b\x93\xa9\x13d\xf1n\xea=@\xffs\x97\xce\xed" +
	"\x1d\xc3\x03//\xca\xe8g\x0d'\xd0\xfc}\x03et" +
	"\xaa\xe1q\xb3\xa3\x912:\xb4\xed\xfa#G\xee\xd0\x8f" +
	"\x82u#j\xf3\xe6\"p\xaaq+\x9a\xab\x1aus" +
	"U\xe3j\xd3j$\xe7\xbb\x7f\xd10\xb5\x7f\xe0\xc5\xa3" +
	"\x11\xb4z\x9b\x14Bk\xe4\xed\x07v\x0d\x1e\xbf\xfa\xd8" +
	"\xa2\xb0k\x9bF\xd1\xdc\xd8D\xa6}M\x8f\xa3\xd9g" +
	"P\xdc\xf4\xf9\x07\xff:|\xd6;\x06\xacO:\xea0" +
	":\xc9\x91v\xfa\xc2ta\xfb\xf4\xb1h\xc9W\x1a?" +
	"\xa5\x07\xae5\xa8\x04\xff9\xef\x9e;}\xa2\xf1\x97\x81" +
	"\x81\xb8:d|\x82\xa0\xf9/\x1d\x9c\xe9\x9a\xba\xf9\x9a" +
	"W#\xd9m4D\x1b\x8e\xffk\xf0\x8eMc3\xaf" +
	"\x82\xd5\x17\xd6\xb5\xd7\xd8@\x85\x1f\x16N\xdf\xfd\xca\xd0" +
	"\xaa7~\xbd\xfb\xb5\xa0O\xc5y\xc1\x10m\xf8\xe27" +
	"?\xb3w\xe737\xff&\xe2\x94\x1b\x9f\xa5\x93\xfe\x0d" +
	"w\x0d\xdd\xc7N\x9d\x0c\xde\x10d\xba\xcd\xe8\"\xa7\x15" +
	"\xe1t\xd3u_\xc8O<\xf7\xca\xebQ\xb8g\xe9." +
	"\x9a?\x12\x06v\xc7\xcc\x99k\xff\xf2\xf1\x1f#O9" +
	"i\\\xa4\xa7\x0c?sa\xf3M\x85\xaf\xbd\x13\xbd\xfa" +
	"sJ\x08\xcdw\xc4\xd5\xed\xaf\x7f\xb1\xbfq\xfcog" +
	"\xa3e\xfa\xb7\xf12\x95\xc9h&\x83\x87\x9f\xdcp\xf1" +
	"\xc3\x7fN\xcfE[i]\xf3\x9f\xc9`@\x18\xbcw" +
	"\xf4\xcd;\x7f\xb8\xe5\xcc\\4\x04o\x16\xd9=$\x0c" +
	"\xce\xfc\xe3\xc0\xfe\x0f\xfa\x92\x1fD0z\xba\xb9\x8b^" +
	"\xce2\x8d\xd7v\xbf\xf5\xa0\x1f\xc9{\xb6\xf9<\xc2\xb8" +
	"_*;\x9e\x93q\xf2\x09\xb7{gOw\xd6\xf6\xec" +
	"1\xdb\xe5\xdd\x99|\x8e\x17\xbd[2v\xa9X\xba}" +
	"\x94OV\xb8\xeb\x8dr\xb7\x92\xf7\x00F\x10\xad65" +
	"\x11\xa1\x11\x94\xa9\xb1}\xa3\xa0\xb0\x19\x1d1\xc4\x16e" +
	"Q\xd9CtV\xd1Q\x099\x04\xe5|\xb1\xdcfP" +
	"\x98\xad\xa3\x1a\xc2\x87\x92-\xd8=[Aa\xc3:j" +
	"a7\xa3\xac6\x1b\x18\x04\x85\xf5\xea~\xc6)\x94\xf2" +
	"\xdc\xe3\x80\xd94\xfa\xe3<H\x16\xd0K\xa3_\xe6;" +
	"x\xc6\xe3Y\x00H\xa3\xef\xf1r!W\xb4=Py" +
	"6\x8d{\xbc\\\x81;\x15/\x8d#\x88a1\xf4\xa5" +
	"\x16\xe3\x16\x197\xbbf\xc4.\xdb\x05t\x97\xe3c\x8b" +
	"g{<\xe2\"\xf0\x89\xae\xa5\xa9\x1a\x80\x86\x00\xcc\xd8" +
	"\x0c`5\xa9h\xadP\xd0\xcfy\xbcl{N\x19\x00" +
	"\x90\xcd\xf3\x06 2\x88\x93\xbc,L\x90\xbb\x0b\x10\xfa" +
	"\xb8\xea2>\xbe\x14|(\x95\x9d\x92\xe3\xf2+&]" +
	"\xe6n\xc9)\xba<H:\xdcS\xb1\x93\x96\xf8U\xeb" +
	"\xa5\xe7\xbd\x9a\xd0[#\xa1\xa3P#\x82\x82\x18\x89\xb8" +
	"\x84'\x16\xf9\xae-\xdcusN\x91B\xb5T\x16\x84" +
	"\x1a\x04\xb0\x92*Zm\x0a\xeeq\x03;l\x9d'h" +
	"@l]^\xbcq\xee\x05\xff\x0d\xd1\xdbV\xbb\x0b\x03" +
	"F\xcb\x9a\xa9\x1aRYS\xa0`jy\xa12y\xc7" +
	"\xe5\xf2q#\xab\x05\xfe\xf1\xdf\x96Xb\xaf\x0b\xea\xd0" +
	"\x04uH\xfeF)8\x18#zH-\x18\xe5xS" +
	"\x196\xf6\x95\x9b3\xa4\x868\x0d\"\x00\xab\xb8\x1e/" +
	"\x13b\xfd|\x11b\xa35\x88\x05\x96\x80\xd98\x88\xc9" +
	"y\x93\xb3j\xb5\x86alB\xeb^\x15\xad\x09\x05\x19" +
	"b\x1bm\x07\xc6;\x01\xac\xfbU\xb4\xf2\x0a\xa2\xd2F" +
	"\xe2\x83\xe5\xc80\xab\xa2UR\x90\xa9\xe96T\x01X" +
	"a\x0c\xc0\xca\xabhM]\x0ek=S\xc8\xa2\x01\x0a" +
	"\x1a\x10\x92&&@\xc1\x04\xa0\xefN\x173\x13e\xa7" +
	"\x08\xbaSq\x97U\xc8\x1a\xdc\x86B~\xa3>I\x8a" +
	">\x91\xba\x03\xe5\xf2f=\x9d\xa0\xb0\x9bh\xc5\xc8}" +
	"\x87R-\xb0\x95]\xa00C\xd7\xc7\xb9\x97\xc6\x96\"" +
	"\x9fZ@\xec\xdaeR\x11\xd3\xa0:E\xd1\xa3\xa8\xf8" +
	"\xdb\x9f\xfc\x81\xf5\xca\x1f\x9e8\x0e\x96\xa6\xe0\xc0\x1a\xc4" +
	"&\x80\x1e\x1cC\xbf:6\xedZ\xcem\xb7\xdb\x03\x1f" +
	"\xeb\x1e\xb03\xb9\xe2x\xbbt\xddN\x85\xd4sN\xb1" +
	"\x16\xa8\xd1yLB\xa0r\xd4\x90\x13*Z\x9e\x82L" +
	"\xa9\"5I_\x96T\xb4v\x13Rj\x80\xd44!" +
	"5\xa5\xa2\xf5\xe8\xa7\xb4S=Rpy9\xc7\xdd\xda" +
	"\xef\x02N\xcer\xd0\xb3w;\x8b\x9a\xb1i\xe9\\\x1c" +
	"\xf4\x81\xecI\xe9\xe0J\xcd\x8c\x1e\xd5x\x85\xc0W\xaa" +
	"\x1e\x94\xda\x9f\x1d\xa6u\xff,\xe1+\xc5<J\x05\xc9" +
	"\x9e\xde\x01\x0a\x9b%\x09!\x95\x18J\x05\xcef\xe8\xec" +
	"a\x92\x10R\xed\xa0\xfc\xb9\xc0*c\xa0\xb0\x02I\x08" +
	"\xa9\xc7Q\xfeZ\xa1\xe9Q\xd8=:&B%\x8bR" +
	"\xab\xb1!\xea\xa7\x8d\xba/7\x01\xa8N1Mu\x0e" +
	"\xd8\x13Z\xa8\x11\x02\xc1!\x88\x00Z\x88\x0a\xe4\x179" +
	"^\x04\xdd\xa3\xcf{\xaa\xd3\x9b\xc6\x962\xb7\xe3\xf2\x9a" +
	"\x9c\x0f\xe2\x1d\xaa\xb9n\x17\xdc%qp\x95B(t" +
	"=\xb2\xdf0O\xf6\xab'+\xbc<-\x07=\xf6F" +
	"\x91\\\x18\x83\xbb\xa5v\xf3\xe2(\xaa\x05u\"\x02\xa8" +
	"\xbbI\xbb\xe6_\xdcRp\xca|\x11g\xc5Po\x8b" +
	"DT,MC^\xd4\x82\xfb?6G=\xb9\x12E" +
	"y\xa7\x9d\xaf\xf0\xff\x8b\x1c\x9b\x87K\xfcQkc\xde" +
	">\x1f\xb3\xbf\x1c\xec\xe2\x18\xab\xaff\xcdV\xfb7N" +
	"\x95\xabl\x15|\xa4\x15\xfa)\xaa\x80\x0c\xb3N\xc5\xab" +
	"\xa7\x0a\x96:f\xf5\xd4@TT\x95\xec\xe9\xbccg" +
	"\xe3LZD\x96VI \x8e\xe4\x88\xf3\x1b\xa7\x1e\xc4" +
	"\xd1Q\xca:\xc5X\xa3TolG\xec\x96\x1a\x9c\x97" +
	"\xa9\x9f\xab\xd7\xff\x1b\x00\x00\xff\xffh>\xc3\xdd"

func init() {
	schemas.Register(schema_882cc5e81e24c654,
		0x83bb5f78b82ac5dc,
		0x85d0357930685d84,
		0x85f942024bf84ecf,
		0x91e683185001184f,
		0x96916098652fab6a,
		0x9c40e01c6c4d6a8c,
		0xaaf30f9b96dbaba8,
		0xaf22fbd73458b16c,
		0xb11bd3344150410c,
		0xb3cd040205e8ec8c,
		0xb3d19b3f1e109b10,
		0xb7edc2f82dfb5c92,
		0xb86b8e043dd4ae9a,
		0xba9a01628ce6fb28,
		0xbb0748b8b81c5da8,
		0xbbb54198780ac37c,
		0xc212c5427766d750,
		0xc274e04de97bea40,
		0xc2795e6d79ecdb04,
		0xc40bcadbe673eafe,
		0xc8152b782a899bb7,
		0xc88962474842fc67,
		0xc97cc7cf1d494ce1,
		0xcc2ba4768c165bb5,
		0xcdd1115f494e323f,
		0xcebdaa686c3b1b47,
		0xd8f9e317dc892161,
		0xd9566d254aeca44d,
		0xe0ee670b3f3cce5e,
		0xed79f6f5f2329381,
		0xeddc53a04bd0bbe7,
		0xef0839ef989af4dc,
		0xff7bd42f170b6311)
}
