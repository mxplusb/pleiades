// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft/v1/raft_shard.proto

package io.a13s.api.raft.v1;

/**
 * Protobuf enum {@code raft.v1.StateMachineType}
 */
public enum StateMachineType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>STATE_MACHINE_TYPE_UNSPECIFIED = 0;</code>
   */
  STATE_MACHINE_TYPE_UNSPECIFIED(0, 0),
  /**
   * <code>STATE_MACHINE_TYPE_KV = 1;</code>
   */
  STATE_MACHINE_TYPE_KV(2, 1),
  UNRECOGNIZED(-1, -1),
  ;

  /**
   * <code>STATE_MACHINE_TYPE_TEST = 0;</code>
   */
  public static final StateMachineType STATE_MACHINE_TYPE_TEST = STATE_MACHINE_TYPE_UNSPECIFIED;
  /**
   * <code>STATE_MACHINE_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int STATE_MACHINE_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>STATE_MACHINE_TYPE_TEST = 0;</code>
   */
  public static final int STATE_MACHINE_TYPE_TEST_VALUE = 0;
  /**
   * <code>STATE_MACHINE_TYPE_KV = 1;</code>
   */
  public static final int STATE_MACHINE_TYPE_KV_VALUE = 1;


  public final int getNumber() {
    if (index == -1) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static StateMachineType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static StateMachineType forNumber(int value) {
    switch (value) {
      case 0: return STATE_MACHINE_TYPE_UNSPECIFIED;
      case 1: return STATE_MACHINE_TYPE_KV;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<StateMachineType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      StateMachineType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<StateMachineType>() {
          public StateMachineType findValueByNumber(int number) {
            return StateMachineType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (index == -1) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.a13s.api.raft.v1.RaftShardProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final StateMachineType[] VALUES = getStaticValuesArray();
  private static StateMachineType[] getStaticValuesArray() {
    return new StateMachineType[] {
      STATE_MACHINE_TYPE_UNSPECIFIED, STATE_MACHINE_TYPE_TEST, STATE_MACHINE_TYPE_KV, 
    };
  }
  public static StateMachineType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private StateMachineType(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:raft.v1.StateMachineType)
}

