syntax = "proto3";
package database;

option go_package = "./database";
import "api/v1/errors.proto";

service SessionService {
  rpc NewSession(NewSessionRequest) returns (NewSessionResponse);
  rpc CloseSession(Session) returns (Session);
//  rpc ProposeSession(ProposeSessionRequest) returns (stream IndexState);
}

message SessionPayload {
  oneof Type {
    NewSessionRequest NewSessionRequest = 1;
    NewSessionResponse NewSessionResponse = 2;
    CloseSessionRequest CloseSessionRequest = 3;
    CloseSessionResponse CloseSessionResponse = 4;
    DBError Error = 5;
  }
  enum MethodName {
    NEW_SESSION = 0;
    CLOSE_SESSION = 1;
  }
  MethodName Method = 6;
}

message CloseSessionRequest {
  Session session = 1;
  int64 timeout = 2;
}

message CloseSessionResponse {
  Session session = 1;
  int64 timeout = 2;
}

message ProposeSessionRequest {
  Session session = 1;
  int64 timeout = 2;
}

message Session {
  uint64 cluster_id = 1;
  uint64 client_id = 2;
  uint64 session_id = 3;
  uint64 responded_to = 4;
}

message NewSessionRequest {
  uint64 cluster_id = 1;
  uint64 client_id = 2;
}

message NewSessionResponse {
  uint64 session_id = 1;
}
