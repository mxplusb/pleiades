// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: api/v1/database/raft_control.proto

package database

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RaftControlPayload_MethodName int32

const (
	RaftControlPayload_ADD_NODE                RaftControlPayload_MethodName = 0
	RaftControlPayload_ADD_OBSERVER            RaftControlPayload_MethodName = 1
	RaftControlPayload_ADD_WITNESS             RaftControlPayload_MethodName = 2
	RaftControlPayload_GET_ID                  RaftControlPayload_MethodName = 3
	RaftControlPayload_GET_LEADER_ID           RaftControlPayload_MethodName = 4
	RaftControlPayload_READ_INDEX              RaftControlPayload_MethodName = 5
	RaftControlPayload_READ_LOCAL_NODE         RaftControlPayload_MethodName = 6
	RaftControlPayload_REQUEST_COMPACTION      RaftControlPayload_MethodName = 7
	RaftControlPayload_REQUEST_DELETE_NODE     RaftControlPayload_MethodName = 8
	RaftControlPayload_REQUEST_LEADER_TRANSFER RaftControlPayload_MethodName = 9
	RaftControlPayload_REQUEST_SNAPSHOT        RaftControlPayload_MethodName = 10
	RaftControlPayload_STOP                    RaftControlPayload_MethodName = 11
	RaftControlPayload_STOP_NODE               RaftControlPayload_MethodName = 12
)

// Enum value maps for RaftControlPayload_MethodName.
var (
	RaftControlPayload_MethodName_name = map[int32]string{
		0:  "ADD_NODE",
		1:  "ADD_OBSERVER",
		2:  "ADD_WITNESS",
		3:  "GET_ID",
		4:  "GET_LEADER_ID",
		5:  "READ_INDEX",
		6:  "READ_LOCAL_NODE",
		7:  "REQUEST_COMPACTION",
		8:  "REQUEST_DELETE_NODE",
		9:  "REQUEST_LEADER_TRANSFER",
		10: "REQUEST_SNAPSHOT",
		11: "STOP",
		12: "STOP_NODE",
	}
	RaftControlPayload_MethodName_value = map[string]int32{
		"ADD_NODE":                0,
		"ADD_OBSERVER":            1,
		"ADD_WITNESS":             2,
		"GET_ID":                  3,
		"GET_LEADER_ID":           4,
		"READ_INDEX":              5,
		"READ_LOCAL_NODE":         6,
		"REQUEST_COMPACTION":      7,
		"REQUEST_DELETE_NODE":     8,
		"REQUEST_LEADER_TRANSFER": 9,
		"REQUEST_SNAPSHOT":        10,
		"STOP":                    11,
		"STOP_NODE":               12,
	}
)

func (x RaftControlPayload_MethodName) Enum() *RaftControlPayload_MethodName {
	p := new(RaftControlPayload_MethodName)
	*p = x
	return p
}

func (x RaftControlPayload_MethodName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RaftControlPayload_MethodName) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_database_raft_control_proto_enumTypes[0].Descriptor()
}

func (RaftControlPayload_MethodName) Type() protoreflect.EnumType {
	return &file_api_v1_database_raft_control_proto_enumTypes[0]
}

func (x RaftControlPayload_MethodName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RaftControlPayload_MethodName.Descriptor instead.
func (RaftControlPayload_MethodName) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{0, 0}
}

type IndexState_ResultCode int32

const (
	IndexState_Timeout    IndexState_ResultCode = 0
	IndexState_Completed  IndexState_ResultCode = 1
	IndexState_Terminated IndexState_ResultCode = 2
	IndexState_Rejected   IndexState_ResultCode = 3
	IndexState_Dropped    IndexState_ResultCode = 4
	IndexState_Aborted    IndexState_ResultCode = 5
	IndexState_Committed  IndexState_ResultCode = 6
)

// Enum value maps for IndexState_ResultCode.
var (
	IndexState_ResultCode_name = map[int32]string{
		0: "Timeout",
		1: "Completed",
		2: "Terminated",
		3: "Rejected",
		4: "Dropped",
		5: "Aborted",
		6: "Committed",
	}
	IndexState_ResultCode_value = map[string]int32{
		"Timeout":    0,
		"Completed":  1,
		"Terminated": 2,
		"Rejected":   3,
		"Dropped":    4,
		"Aborted":    5,
		"Committed":  6,
	}
)

func (x IndexState_ResultCode) Enum() *IndexState_ResultCode {
	p := new(IndexState_ResultCode)
	*p = x
	return p
}

func (x IndexState_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexState_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_database_raft_control_proto_enumTypes[1].Descriptor()
}

func (IndexState_ResultCode) Type() protoreflect.EnumType {
	return &file_api_v1_database_raft_control_proto_enumTypes[1]
}

func (x IndexState_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexState_ResultCode.Descriptor instead.
func (IndexState_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{11, 0}
}

type RaftControlPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Types:
	//	*RaftControlPayload_GetLeaderIdRequest
	//	*RaftControlPayload_GetLeaderIdResponse
	//	*RaftControlPayload_IdRequest
	//	*RaftControlPayload_IdResponse
	//	*RaftControlPayload_IndexState
	//	*RaftControlPayload_ModifyNodeRequest
	//	*RaftControlPayload_ReadIndexRequest
	//	*RaftControlPayload_ReadLocalNodeRequest
	//	*RaftControlPayload_RequestLeaderTransferResponse
	//	*RaftControlPayload_RequestSnapshotRequest
	//	*RaftControlPayload_SnapshotOption
	//	*RaftControlPayload_StopNodeResponse
	//	*RaftControlPayload_StopRequest
	//	*RaftControlPayload_StopResponse
	//	*RaftControlPayload_SysOpState
	Types  isRaftControlPayload_Types    `protobuf_oneof:"Types"`
	Method RaftControlPayload_MethodName `protobuf:"varint,17,opt,name=Method,proto3,enum=database.RaftControlPayload_MethodName" json:"Method,omitempty"`
}

func (x *RaftControlPayload) Reset() {
	*x = RaftControlPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftControlPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftControlPayload) ProtoMessage() {}

func (x *RaftControlPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftControlPayload.ProtoReflect.Descriptor instead.
func (*RaftControlPayload) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{0}
}

func (m *RaftControlPayload) GetTypes() isRaftControlPayload_Types {
	if m != nil {
		return m.Types
	}
	return nil
}

func (x *RaftControlPayload) GetGetLeaderIdRequest() *GetLeaderIDRequest {
	if x, ok := x.GetTypes().(*RaftControlPayload_GetLeaderIdRequest); ok {
		return x.GetLeaderIdRequest
	}
	return nil
}

func (x *RaftControlPayload) GetGetLeaderIdResponse() *GetLeaderIDResponse {
	if x, ok := x.GetTypes().(*RaftControlPayload_GetLeaderIdResponse); ok {
		return x.GetLeaderIdResponse
	}
	return nil
}

func (x *RaftControlPayload) GetIdRequest() *IdRequest {
	if x, ok := x.GetTypes().(*RaftControlPayload_IdRequest); ok {
		return x.IdRequest
	}
	return nil
}

func (x *RaftControlPayload) GetIdResponse() *IdResponse {
	if x, ok := x.GetTypes().(*RaftControlPayload_IdResponse); ok {
		return x.IdResponse
	}
	return nil
}

func (x *RaftControlPayload) GetIndexState() *IndexState {
	if x, ok := x.GetTypes().(*RaftControlPayload_IndexState); ok {
		return x.IndexState
	}
	return nil
}

func (x *RaftControlPayload) GetModifyNodeRequest() *ModifyNodeRequest {
	if x, ok := x.GetTypes().(*RaftControlPayload_ModifyNodeRequest); ok {
		return x.ModifyNodeRequest
	}
	return nil
}

func (x *RaftControlPayload) GetReadIndexRequest() *ReadIndexRequest {
	if x, ok := x.GetTypes().(*RaftControlPayload_ReadIndexRequest); ok {
		return x.ReadIndexRequest
	}
	return nil
}

func (x *RaftControlPayload) GetReadLocalNodeRequest() *ReadLocalNodeRequest {
	if x, ok := x.GetTypes().(*RaftControlPayload_ReadLocalNodeRequest); ok {
		return x.ReadLocalNodeRequest
	}
	return nil
}

func (x *RaftControlPayload) GetRequestLeaderTransferResponse() *RequestLeaderTransferResponse {
	if x, ok := x.GetTypes().(*RaftControlPayload_RequestLeaderTransferResponse); ok {
		return x.RequestLeaderTransferResponse
	}
	return nil
}

func (x *RaftControlPayload) GetRequestSnapshotRequest() *RequestSnapshotRequest {
	if x, ok := x.GetTypes().(*RaftControlPayload_RequestSnapshotRequest); ok {
		return x.RequestSnapshotRequest
	}
	return nil
}

func (x *RaftControlPayload) GetSnapshotOption() *SnapshotOption {
	if x, ok := x.GetTypes().(*RaftControlPayload_SnapshotOption); ok {
		return x.SnapshotOption
	}
	return nil
}

func (x *RaftControlPayload) GetStopNodeResponse() *StopNodeResponse {
	if x, ok := x.GetTypes().(*RaftControlPayload_StopNodeResponse); ok {
		return x.StopNodeResponse
	}
	return nil
}

func (x *RaftControlPayload) GetStopRequest() *StopRequest {
	if x, ok := x.GetTypes().(*RaftControlPayload_StopRequest); ok {
		return x.StopRequest
	}
	return nil
}

func (x *RaftControlPayload) GetStopResponse() *StopResponse {
	if x, ok := x.GetTypes().(*RaftControlPayload_StopResponse); ok {
		return x.StopResponse
	}
	return nil
}

func (x *RaftControlPayload) GetSysOpState() *SysOpState {
	if x, ok := x.GetTypes().(*RaftControlPayload_SysOpState); ok {
		return x.SysOpState
	}
	return nil
}

func (x *RaftControlPayload) GetMethod() RaftControlPayload_MethodName {
	if x != nil {
		return x.Method
	}
	return RaftControlPayload_ADD_NODE
}

type isRaftControlPayload_Types interface {
	isRaftControlPayload_Types()
}

type RaftControlPayload_GetLeaderIdRequest struct {
	GetLeaderIdRequest *GetLeaderIDRequest `protobuf:"bytes,1,opt,name=GetLeaderIdRequest,proto3,oneof"`
}

type RaftControlPayload_GetLeaderIdResponse struct {
	GetLeaderIdResponse *GetLeaderIDResponse `protobuf:"bytes,2,opt,name=GetLeaderIdResponse,proto3,oneof"`
}

type RaftControlPayload_IdRequest struct {
	IdRequest *IdRequest `protobuf:"bytes,3,opt,name=IdRequest,proto3,oneof"`
}

type RaftControlPayload_IdResponse struct {
	IdResponse *IdResponse `protobuf:"bytes,4,opt,name=IdResponse,proto3,oneof"`
}

type RaftControlPayload_IndexState struct {
	IndexState *IndexState `protobuf:"bytes,5,opt,name=IndexState,proto3,oneof"`
}

type RaftControlPayload_ModifyNodeRequest struct {
	ModifyNodeRequest *ModifyNodeRequest `protobuf:"bytes,6,opt,name=ModifyNodeRequest,proto3,oneof"`
}

type RaftControlPayload_ReadIndexRequest struct {
	ReadIndexRequest *ReadIndexRequest `protobuf:"bytes,7,opt,name=ReadIndexRequest,proto3,oneof"`
}

type RaftControlPayload_ReadLocalNodeRequest struct {
	ReadLocalNodeRequest *ReadLocalNodeRequest `protobuf:"bytes,8,opt,name=ReadLocalNodeRequest,proto3,oneof"`
}

type RaftControlPayload_RequestLeaderTransferResponse struct {
	RequestLeaderTransferResponse *RequestLeaderTransferResponse `protobuf:"bytes,9,opt,name=RequestLeaderTransferResponse,proto3,oneof"`
}

type RaftControlPayload_RequestSnapshotRequest struct {
	RequestSnapshotRequest *RequestSnapshotRequest `protobuf:"bytes,10,opt,name=RequestSnapshotRequest,proto3,oneof"`
}

type RaftControlPayload_SnapshotOption struct {
	SnapshotOption *SnapshotOption `protobuf:"bytes,12,opt,name=SnapshotOption,proto3,oneof"`
}

type RaftControlPayload_StopNodeResponse struct {
	StopNodeResponse *StopNodeResponse `protobuf:"bytes,13,opt,name=StopNodeResponse,proto3,oneof"`
}

type RaftControlPayload_StopRequest struct {
	StopRequest *StopRequest `protobuf:"bytes,14,opt,name=StopRequest,proto3,oneof"`
}

type RaftControlPayload_StopResponse struct {
	StopResponse *StopResponse `protobuf:"bytes,15,opt,name=StopResponse,proto3,oneof"`
}

type RaftControlPayload_SysOpState struct {
	SysOpState *SysOpState `protobuf:"bytes,16,opt,name=SysOpState,proto3,oneof"`
}

func (*RaftControlPayload_GetLeaderIdRequest) isRaftControlPayload_Types() {}

func (*RaftControlPayload_GetLeaderIdResponse) isRaftControlPayload_Types() {}

func (*RaftControlPayload_IdRequest) isRaftControlPayload_Types() {}

func (*RaftControlPayload_IdResponse) isRaftControlPayload_Types() {}

func (*RaftControlPayload_IndexState) isRaftControlPayload_Types() {}

func (*RaftControlPayload_ModifyNodeRequest) isRaftControlPayload_Types() {}

func (*RaftControlPayload_ReadIndexRequest) isRaftControlPayload_Types() {}

func (*RaftControlPayload_ReadLocalNodeRequest) isRaftControlPayload_Types() {}

func (*RaftControlPayload_RequestLeaderTransferResponse) isRaftControlPayload_Types() {}

func (*RaftControlPayload_RequestSnapshotRequest) isRaftControlPayload_Types() {}

func (*RaftControlPayload_SnapshotOption) isRaftControlPayload_Types() {}

func (*RaftControlPayload_StopNodeResponse) isRaftControlPayload_Types() {}

func (*RaftControlPayload_StopRequest) isRaftControlPayload_Types() {}

func (*RaftControlPayload_StopResponse) isRaftControlPayload_Types() {}

func (*RaftControlPayload_SysOpState) isRaftControlPayload_Types() {}

type StopNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopNodeResponse) Reset() {
	*x = StopNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopNodeResponse) ProtoMessage() {}

func (x *StopNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopNodeResponse.ProtoReflect.Descriptor instead.
func (*StopNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{1}
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{2}
}

type StopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{3}
}

type RequestSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId uint64          `protobuf:"varint,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Options   *SnapshotOption `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	Timeout   int64           `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *RequestSnapshotRequest) Reset() {
	*x = RequestSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSnapshotRequest) ProtoMessage() {}

func (x *RequestSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSnapshotRequest.ProtoReflect.Descriptor instead.
func (*RequestSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{4}
}

func (x *RequestSnapshotRequest) GetClusterId() uint64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *RequestSnapshotRequest) GetOptions() *SnapshotOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *RequestSnapshotRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// SnapshotOption is the options users can specify when requesting a snapshot
// to be generated.
type SnapshotOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CompactionOverhead is the compaction overhead value to use for the request
	// snapshot operation when OverrideCompactionOverhead is true. This field is
	// ignored when exporting a snapshot, that is when Exported is true.
	CompactionOverhead uint64 `protobuf:"varint,1,opt,name=CompactionOverhead,proto3" json:"CompactionOverhead,omitempty"`
	// ExportPath is the path where the exported snapshot should be stored, it
	// must point to an existing directory for which the current user has write
	// permission to it.
	ExportPath string `protobuf:"bytes,2,opt,name=ExportPath,proto3" json:"ExportPath,omitempty"`
	// Exported is a boolean flag indicating whether the snapshot requested to
	// be generated should be exported. For an exported snapshot, it is users'
	// responsibility to manage the snapshot files. By default, a requested
	// snapshot is not considered as exported, such a regular snapshot is managed
	// the system.
	Exported bool `protobuf:"varint,3,opt,name=Exported,proto3" json:"Exported,omitempty"`
	// OverrideCompactionOverhead defines whether the requested snapshot operation
	// should override the compaction overhead setting specified in node's config.
	// This field is ignored by the system when exporting a snapshot.
	OverrideCompactionOverhead bool `protobuf:"varint,4,opt,name=OverrideCompactionOverhead,proto3" json:"OverrideCompactionOverhead,omitempty"`
}

func (x *SnapshotOption) Reset() {
	*x = SnapshotOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotOption) ProtoMessage() {}

func (x *SnapshotOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotOption.ProtoReflect.Descriptor instead.
func (*SnapshotOption) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{5}
}

func (x *SnapshotOption) GetCompactionOverhead() uint64 {
	if x != nil {
		return x.CompactionOverhead
	}
	return 0
}

func (x *SnapshotOption) GetExportPath() string {
	if x != nil {
		return x.ExportPath
	}
	return ""
}

func (x *SnapshotOption) GetExported() bool {
	if x != nil {
		return x.Exported
	}
	return false
}

func (x *SnapshotOption) GetOverrideCompactionOverhead() bool {
	if x != nil {
		return x.OverrideCompactionOverhead
	}
	return false
}

// RequestLeaderTransferResponse is the response to a NodeHostService.RequestLeaderTransfer call
type RequestLeaderTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestLeaderTransferResponse) Reset() {
	*x = RequestLeaderTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLeaderTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLeaderTransferResponse) ProtoMessage() {}

func (x *RequestLeaderTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLeaderTransferResponse.ProtoReflect.Descriptor instead.
func (*RequestLeaderTransferResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{6}
}

// SysOpState is the object used to provide system maintenance operation result
// to users.
type SysOpState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SysOpState) Reset() {
	*x = SysOpState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysOpState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysOpState) ProtoMessage() {}

func (x *SysOpState) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysOpState.ProtoReflect.Descriptor instead.
func (*SysOpState) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{7}
}

// ModifyNodeRequest is the object used to modify the node's configuration. All fields are optional and not all methods require all fields to be set.
type ModifyNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId         *uint64 `protobuf:"varint,1,opt,name=clusterId,proto3,oneof" json:"clusterId,omitempty"`
	NodeId            *uint64 `protobuf:"varint,2,opt,name=nodeId,proto3,oneof" json:"nodeId,omitempty"`
	Target            *string `protobuf:"bytes,3,opt,name=target,proto3,oneof" json:"target,omitempty"`
	ConfigChangeIndex *uint64 `protobuf:"varint,4,opt,name=configChangeIndex,proto3,oneof" json:"configChangeIndex,omitempty"`
	Timeout           *int64  `protobuf:"varint,5,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	Synchronous       *bool   `protobuf:"varint,6,opt,name=synchronous,proto3,oneof" json:"synchronous,omitempty"`
}

func (x *ModifyNodeRequest) Reset() {
	*x = ModifyNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyNodeRequest) ProtoMessage() {}

func (x *ModifyNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyNodeRequest.ProtoReflect.Descriptor instead.
func (*ModifyNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{8}
}

func (x *ModifyNodeRequest) GetClusterId() uint64 {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return 0
}

func (x *ModifyNodeRequest) GetNodeId() uint64 {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return 0
}

func (x *ModifyNodeRequest) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *ModifyNodeRequest) GetConfigChangeIndex() uint64 {
	if x != nil && x.ConfigChangeIndex != nil {
		return *x.ConfigChangeIndex
	}
	return 0
}

func (x *ModifyNodeRequest) GetTimeout() int64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *ModifyNodeRequest) GetSynchronous() bool {
	if x != nil && x.Synchronous != nil {
		return *x.Synchronous
	}
	return false
}

type ReadLocalNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *KeyValue `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ReadLocalNodeRequest) Reset() {
	*x = ReadLocalNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadLocalNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLocalNodeRequest) ProtoMessage() {}

func (x *ReadLocalNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLocalNodeRequest.ProtoReflect.Descriptor instead.
func (*ReadLocalNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{9}
}

func (x *ReadLocalNodeRequest) GetQuery() *KeyValue {
	if x != nil {
		return x.Query
	}
	return nil
}

type ReadIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId uint64 `protobuf:"varint,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Timeout   int64  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ReadIndexRequest) Reset() {
	*x = ReadIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadIndexRequest) ProtoMessage() {}

func (x *ReadIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadIndexRequest.ProtoReflect.Descriptor instead.
func (*ReadIndexRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{10}
}

func (x *ReadIndexRequest) GetClusterId() uint64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ReadIndexRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type IndexState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        IndexState_ResultCode `protobuf:"varint,1,opt,name=Status,proto3,enum=database.IndexState_ResultCode" json:"Status,omitempty"`
	SnapshotIndex uint64                `protobuf:"varint,2,opt,name=SnapshotIndex,proto3" json:"SnapshotIndex,omitempty"`
	Results       *Result               `protobuf:"bytes,3,opt,name=Results,proto3,oneof" json:"Results,omitempty"`
}

func (x *IndexState) Reset() {
	*x = IndexState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexState) ProtoMessage() {}

func (x *IndexState) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexState.ProtoReflect.Descriptor instead.
func (*IndexState) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{11}
}

func (x *IndexState) GetStatus() IndexState_ResultCode {
	if x != nil {
		return x.Status
	}
	return IndexState_Timeout
}

func (x *IndexState) GetSnapshotIndex() uint64 {
	if x != nil {
		return x.SnapshotIndex
	}
	return 0
}

func (x *IndexState) GetResults() *Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{12}
}

func (x *Result) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Result) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{13}
}

type IdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdResponse) Reset() {
	*x = IdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdResponse) ProtoMessage() {}

func (x *IdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdResponse.ProtoReflect.Descriptor instead.
func (*IdResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{14}
}

func (x *IdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLeaderIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId uint64 `protobuf:"varint,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *GetLeaderIDRequest) Reset() {
	*x = GetLeaderIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderIDRequest) ProtoMessage() {}

func (x *GetLeaderIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderIDRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderIDRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{15}
}

func (x *GetLeaderIDRequest) GetClusterId() uint64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

type GetLeaderIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderId uint64 `protobuf:"varint,1,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	IsLeader bool   `protobuf:"varint,2,opt,name=isLeader,proto3" json:"isLeader,omitempty"`
}

func (x *GetLeaderIDResponse) Reset() {
	*x = GetLeaderIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_database_raft_control_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderIDResponse) ProtoMessage() {}

func (x *GetLeaderIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_database_raft_control_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderIDResponse.ProtoReflect.Descriptor instead.
func (*GetLeaderIDResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_database_raft_control_proto_rawDescGZIP(), []int{16}
}

func (x *GetLeaderIDResponse) GetLeaderId() uint64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *GetLeaderIDResponse) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

var File_api_v1_database_raft_control_proto protoreflect.FileDescriptor

var file_api_v1_database_raft_control_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x18,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x6b, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x0b, 0x0a, 0x12, 0x52, 0x61, 0x66,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x52, 0x65,
	0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54,
	0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14,
	0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x0e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x53,
	0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4f,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x4f, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x53, 0x79, 0x73, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x3f, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x61, 0x66, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x22, 0xfe, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x41, 0x44, 0x44, 0x5f, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x44, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x47, 0x45, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x05,
	0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x4e, 0x4f, 0x44, 0x45, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45,
	0x52, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53,
	0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f,
	0x50, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x10, 0x0c, 0x42, 0x07, 0x0a, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x53,
	0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e,
	0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72,
	0x68, 0x65, 0x61, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4f, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x03, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63,
	0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52,
	0x0b, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x4a, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x88,
	0x01, 0x01, 0x22, 0x6f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x72,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x10, 0x06, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0x32, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x0b, 0x0a, 0x09, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_database_raft_control_proto_rawDescOnce sync.Once
	file_api_v1_database_raft_control_proto_rawDescData = file_api_v1_database_raft_control_proto_rawDesc
)

func file_api_v1_database_raft_control_proto_rawDescGZIP() []byte {
	file_api_v1_database_raft_control_proto_rawDescOnce.Do(func() {
		file_api_v1_database_raft_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_database_raft_control_proto_rawDescData)
	})
	return file_api_v1_database_raft_control_proto_rawDescData
}

var file_api_v1_database_raft_control_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_database_raft_control_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_v1_database_raft_control_proto_goTypes = []interface{}{
	(RaftControlPayload_MethodName)(0),    // 0: database.RaftControlPayload.MethodName
	(IndexState_ResultCode)(0),            // 1: database.IndexState.ResultCode
	(*RaftControlPayload)(nil),            // 2: database.RaftControlPayload
	(*StopNodeResponse)(nil),              // 3: database.StopNodeResponse
	(*StopRequest)(nil),                   // 4: database.StopRequest
	(*StopResponse)(nil),                  // 5: database.StopResponse
	(*RequestSnapshotRequest)(nil),        // 6: database.RequestSnapshotRequest
	(*SnapshotOption)(nil),                // 7: database.SnapshotOption
	(*RequestLeaderTransferResponse)(nil), // 8: database.RequestLeaderTransferResponse
	(*SysOpState)(nil),                    // 9: database.SysOpState
	(*ModifyNodeRequest)(nil),             // 10: database.ModifyNodeRequest
	(*ReadLocalNodeRequest)(nil),          // 11: database.ReadLocalNodeRequest
	(*ReadIndexRequest)(nil),              // 12: database.ReadIndexRequest
	(*IndexState)(nil),                    // 13: database.IndexState
	(*Result)(nil),                        // 14: database.Result
	(*IdRequest)(nil),                     // 15: database.IdRequest
	(*IdResponse)(nil),                    // 16: database.IdResponse
	(*GetLeaderIDRequest)(nil),            // 17: database.GetLeaderIDRequest
	(*GetLeaderIDResponse)(nil),           // 18: database.GetLeaderIDResponse
	(*KeyValue)(nil),                      // 19: database.KeyValue
}
var file_api_v1_database_raft_control_proto_depIdxs = []int32{
	17, // 0: database.RaftControlPayload.GetLeaderIdRequest:type_name -> database.GetLeaderIDRequest
	18, // 1: database.RaftControlPayload.GetLeaderIdResponse:type_name -> database.GetLeaderIDResponse
	15, // 2: database.RaftControlPayload.IdRequest:type_name -> database.IdRequest
	16, // 3: database.RaftControlPayload.IdResponse:type_name -> database.IdResponse
	13, // 4: database.RaftControlPayload.IndexState:type_name -> database.IndexState
	10, // 5: database.RaftControlPayload.ModifyNodeRequest:type_name -> database.ModifyNodeRequest
	12, // 6: database.RaftControlPayload.ReadIndexRequest:type_name -> database.ReadIndexRequest
	11, // 7: database.RaftControlPayload.ReadLocalNodeRequest:type_name -> database.ReadLocalNodeRequest
	8,  // 8: database.RaftControlPayload.RequestLeaderTransferResponse:type_name -> database.RequestLeaderTransferResponse
	6,  // 9: database.RaftControlPayload.RequestSnapshotRequest:type_name -> database.RequestSnapshotRequest
	7,  // 10: database.RaftControlPayload.SnapshotOption:type_name -> database.SnapshotOption
	3,  // 11: database.RaftControlPayload.StopNodeResponse:type_name -> database.StopNodeResponse
	4,  // 12: database.RaftControlPayload.StopRequest:type_name -> database.StopRequest
	5,  // 13: database.RaftControlPayload.StopResponse:type_name -> database.StopResponse
	9,  // 14: database.RaftControlPayload.SysOpState:type_name -> database.SysOpState
	0,  // 15: database.RaftControlPayload.Method:type_name -> database.RaftControlPayload.MethodName
	7,  // 16: database.RequestSnapshotRequest.options:type_name -> database.SnapshotOption
	19, // 17: database.ReadLocalNodeRequest.query:type_name -> database.KeyValue
	1,  // 18: database.IndexState.Status:type_name -> database.IndexState.ResultCode
	14, // 19: database.IndexState.Results:type_name -> database.Result
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_api_v1_database_raft_control_proto_init() }
func file_api_v1_database_raft_control_proto_init() {
	if File_api_v1_database_raft_control_proto != nil {
		return
	}
	file_api_v1_database_kv_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_database_raft_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftControlPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLeaderTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysOpState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadLocalNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_database_raft_control_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_database_raft_control_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RaftControlPayload_GetLeaderIdRequest)(nil),
		(*RaftControlPayload_GetLeaderIdResponse)(nil),
		(*RaftControlPayload_IdRequest)(nil),
		(*RaftControlPayload_IdResponse)(nil),
		(*RaftControlPayload_IndexState)(nil),
		(*RaftControlPayload_ModifyNodeRequest)(nil),
		(*RaftControlPayload_ReadIndexRequest)(nil),
		(*RaftControlPayload_ReadLocalNodeRequest)(nil),
		(*RaftControlPayload_RequestLeaderTransferResponse)(nil),
		(*RaftControlPayload_RequestSnapshotRequest)(nil),
		(*RaftControlPayload_SnapshotOption)(nil),
		(*RaftControlPayload_StopNodeResponse)(nil),
		(*RaftControlPayload_StopRequest)(nil),
		(*RaftControlPayload_StopResponse)(nil),
		(*RaftControlPayload_SysOpState)(nil),
	}
	file_api_v1_database_raft_control_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_api_v1_database_raft_control_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_database_raft_control_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_database_raft_control_proto_goTypes,
		DependencyIndexes: file_api_v1_database_raft_control_proto_depIdxs,
		EnumInfos:         file_api_v1_database_raft_control_proto_enumTypes,
		MessageInfos:      file_api_v1_database_raft_control_proto_msgTypes,
	}.Build()
	File_api_v1_database_raft_control_proto = out.File
	file_api_v1_database_raft_control_proto_rawDesc = nil
	file_api_v1_database_raft_control_proto_goTypes = nil
	file_api_v1_database_raft_control_proto_depIdxs = nil
}
