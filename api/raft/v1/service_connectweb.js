// @generated by protoc-gen-connect-web v0.2.1 with parameter "target=js+dts"
// @generated from file raft/v1/service.proto (package raft.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {AddReplicaObserverRequest, AddReplicaObserverResponse, AddReplicaRequest, AddReplicaResponse, AddReplicaWitnessRequest, AddReplicaWitnessResponse, GetLeaderIdRequest, GetLeaderIdResponse, GetShardMembersRequest, GetShardMembersResponse, NewShardRequest, NewShardResponse, RemoveDataRequest, RemoveDataResponse, RemoveReplicaRequest, RemoveReplicaResponse, StartReplicaObserverRequest, StartReplicaObserverResponse, StartReplicaRequest, StartReplicaResponse, StopReplicaRequest, StopReplicaResponse} from "./raft_shard_pb.js";
import {MethodKind} from "@bufbuild/protobuf";
import {CompactRequest, CompactResponse, GetHostConfigRequest, GetHostConfigResponse, SnapshotRequest, SnapshotResponse, StopRequest, StopResponse} from "./raft_host_pb.js";

/**
 * @generated from service raft.v1.ShardService
 */
export const ShardService = {
  typeName: "raft.v1.ShardService",
  methods: {
    /**
     * @generated from rpc raft.v1.ShardService.AddReplica
     */
    addReplica: {
      name: "AddReplica",
      I: AddReplicaRequest,
      O: AddReplicaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.AddReplicaObserver
     */
    addReplicaObserver: {
      name: "AddReplicaObserver",
      I: AddReplicaObserverRequest,
      O: AddReplicaObserverResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.AddReplicaWitness
     */
    addReplicaWitness: {
      name: "AddReplicaWitness",
      I: AddReplicaWitnessRequest,
      O: AddReplicaWitnessResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.GetLeaderId
     */
    getLeaderId: {
      name: "GetLeaderId",
      I: GetLeaderIdRequest,
      O: GetLeaderIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.GetShardMembers
     */
    getShardMembers: {
      name: "GetShardMembers",
      I: GetShardMembersRequest,
      O: GetShardMembersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.NewShard
     */
    newShard: {
      name: "NewShard",
      I: NewShardRequest,
      O: NewShardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.RemoveData
     */
    removeData: {
      name: "RemoveData",
      I: RemoveDataRequest,
      O: RemoveDataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.RemoveReplica
     */
    removeReplica: {
      name: "RemoveReplica",
      I: RemoveReplicaRequest,
      O: RemoveReplicaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.StartReplica
     */
    startReplica: {
      name: "StartReplica",
      I: StartReplicaRequest,
      O: StartReplicaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.StartReplicaObserver
     */
    startReplicaObserver: {
      name: "StartReplicaObserver",
      I: StartReplicaObserverRequest,
      O: StartReplicaObserverResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.ShardService.StopReplica
     */
    stopReplica: {
      name: "StopReplica",
      I: StopReplicaRequest,
      O: StopReplicaResponse,
      kind: MethodKind.Unary,
    },
  }
};

/**
 * @generated from service raft.v1.HostService
 */
export const HostService = {
  typeName: "raft.v1.HostService",
  methods: {
    /**
     * @generated from rpc raft.v1.HostService.Compact
     */
    compact: {
      name: "Compact",
      I: CompactRequest,
      O: CompactResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.HostService.GetHostConfig
     */
    getHostConfig: {
      name: "GetHostConfig",
      I: GetHostConfigRequest,
      O: GetHostConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     *  rpc LeaderTransfer(LeaderTransferRequest) returns (LeaderTransferResponse);
     *
     * @generated from rpc raft.v1.HostService.Snapshot
     */
    snapshot: {
      name: "Snapshot",
      I: SnapshotRequest,
      O: SnapshotResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc raft.v1.HostService.Stop
     */
    stop: {
      name: "Stop",
      I: StopRequest,
      O: StopResponse,
      kind: MethodKind.Unary,
    },
  }
};

