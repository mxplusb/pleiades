// Copyright 2015 The etcd Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file kvstore/v1/kv.proto (package kvstore.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Error} from "../../errors/v1/errors_pb.js";
import type {Transaction} from "./transactions_pb.js";

/**
 * @generated from enum kvstore.v1.KeyOperationType
 */
export declare enum KeyOperationType {
  /**
   * @generated from enum value: KEY_OPERATION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: KEY_OPERATION_TYPE_GET = 1;
   */
  GET = 1,

  /**
   * @generated from enum value: KEY_OPERATION_TYPE_PUT = 2;
   */
  PUT = 2,

  /**
   * @generated from enum value: KEY_OPERATION_TYPE_DELETE = 3;
   */
  DELETE = 3,
}

/**
 * @generated from message kvstore.v1.KVStoreWrapper
 */
export declare class KVStoreWrapper extends Message<KVStoreWrapper> {
  /**
   * @generated from field: uint64 account = 1;
   */
  account: bigint;

  /**
   * @generated from field: string bucket = 2;
   */
  bucket: string;

  /**
   * @generated from field: kvstore.v1.KVStoreWrapper.RequestType typ = 3;
   */
  typ: KVStoreWrapper_RequestType;

  /**
   * @generated from oneof kvstore.v1.KVStoreWrapper.payload
   */
  payload: {
    /**
     * @generated from field: kvstore.v1.CreateAccountRequest create_account_request = 4;
     */
    value: CreateAccountRequest;
    case: "createAccountRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.CreateAccountResponse create_account_reply = 5;
     */
    value: CreateAccountResponse;
    case: "createAccountReply";
  } | {
    /**
     * @generated from field: kvstore.v1.DeleteAccountRequest delete_account_request = 6;
     */
    value: DeleteAccountRequest;
    case: "deleteAccountRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.DeleteAccountResponse delete_account_reply = 7;
     */
    value: DeleteAccountResponse;
    case: "deleteAccountReply";
  } | {
    /**
     * @generated from field: kvstore.v1.GetAccountDescriptorRequest get_account_descriptor_request = 8;
     */
    value: GetAccountDescriptorRequest;
    case: "getAccountDescriptorRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.GetAccountDescriptorResponse get_account_descriptor_reply = 9;
     */
    value: GetAccountDescriptorResponse;
    case: "getAccountDescriptorReply";
  } | {
    /**
     * @generated from field: kvstore.v1.CreateBucketRequest create_bucket_request = 10;
     */
    value: CreateBucketRequest;
    case: "createBucketRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.CreateBucketResponse create_bucket_reply = 11;
     */
    value: CreateBucketResponse;
    case: "createBucketReply";
  } | {
    /**
     * @generated from field: kvstore.v1.DeleteBucketRequest delete_bucket_request = 12;
     */
    value: DeleteBucketRequest;
    case: "deleteBucketRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.DeleteBucketResponse delete_bucket_reply = 13;
     */
    value: DeleteBucketResponse;
    case: "deleteBucketReply";
  } | {
    /**
     * @generated from field: kvstore.v1.GetKeyRequest get_key_request = 14;
     */
    value: GetKeyRequest;
    case: "getKeyRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.GetKeyResponse get_key_reply = 15;
     */
    value: GetKeyResponse;
    case: "getKeyReply";
  } | {
    /**
     * @generated from field: kvstore.v1.PutKeyRequest put_key_request = 16;
     */
    value: PutKeyRequest;
    case: "putKeyRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.PutKeyResponse put_key_reply = 17;
     */
    value: PutKeyResponse;
    case: "putKeyReply";
  } | {
    /**
     * @generated from field: kvstore.v1.DeleteKeyRequest delete_key_request = 18;
     */
    value: DeleteKeyRequest;
    case: "deleteKeyRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.DeleteKeyResponse delete_key_reply = 19;
     */
    value: DeleteKeyResponse;
    case: "deleteKeyReply";
  } | {
    /**
     * @generated from field: kvstore.v1.GetBucketDescriptorRequest get_bucket_descriptor_request = 20;
     */
    value: GetBucketDescriptorRequest;
    case: "getBucketDescriptorRequest";
  } | {
    /**
     * @generated from field: kvstore.v1.GetBucketDescriptorResponse get_bucket_descriptor_reply = 21;
     */
    value: GetBucketDescriptorResponse;
    case: "getBucketDescriptorReply";
  } | {
    /**
     * @generated from field: errors.v1.Error error = 22;
     */
    value: Error;
    case: "error";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<KVStoreWrapper>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.KVStoreWrapper";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KVStoreWrapper;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KVStoreWrapper;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KVStoreWrapper;

  static equals(a: KVStoreWrapper | PlainMessage<KVStoreWrapper> | undefined, b: KVStoreWrapper | PlainMessage<KVStoreWrapper> | undefined): boolean;
}

/**
 * @generated from enum kvstore.v1.KVStoreWrapper.RequestType
 */
export declare enum KVStoreWrapper_RequestType {
  /**
   * @generated from enum value: REQUEST_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: REQUEST_TYPE_CREATE_ACCOUNT_REQUEST = 1;
   */
  CREATE_ACCOUNT_REQUEST = 1,

  /**
   * @generated from enum value: REQUEST_TYPE_CREATE_ACCOUNT_REPLY = 2;
   */
  CREATE_ACCOUNT_REPLY = 2,

  /**
   * @generated from enum value: REQUEST_TYPE_DELETE_ACCOUNT_REQUEST = 3;
   */
  DELETE_ACCOUNT_REQUEST = 3,

  /**
   * @generated from enum value: REQUEST_TYPE_DELETE_ACCOUNT_REPLY = 4;
   */
  DELETE_ACCOUNT_REPLY = 4,

  /**
   * @generated from enum value: REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REQUEST = 5;
   */
  GET_ACCOUNT_DESCRIPTOR_REQUEST = 5,

  /**
   * @generated from enum value: REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REPLY = 6;
   */
  GET_ACCOUNT_DESCRIPTOR_REPLY = 6,

  /**
   * @generated from enum value: REQUEST_TYPE_CREATE_BUCKET_REQUEST = 7;
   */
  CREATE_BUCKET_REQUEST = 7,

  /**
   * @generated from enum value: REQUEST_TYPE_CREATE_BUCKET_REPLY = 8;
   */
  CREATE_BUCKET_REPLY = 8,

  /**
   * @generated from enum value: REQUEST_TYPE_DELETE_BUCKET_REQUEST = 9;
   */
  DELETE_BUCKET_REQUEST = 9,

  /**
   * @generated from enum value: REQUEST_TYPE_DELETE_BUCKET_REPLY = 10;
   */
  DELETE_BUCKET_REPLY = 10,

  /**
   * @generated from enum value: REQUEST_TYPE_GET_KEY_REQUEST = 11;
   */
  GET_KEY_REQUEST = 11,

  /**
   * @generated from enum value: REQUEST_TYPE_GET_KEY_REPLY = 12;
   */
  GET_KEY_REPLY = 12,

  /**
   * @generated from enum value: REQUEST_TYPE_PUT_KEY_REQUEST = 13;
   */
  PUT_KEY_REQUEST = 13,

  /**
   * @generated from enum value: REQUEST_TYPE_PUT_KEY_REPLY = 14;
   */
  PUT_KEY_REPLY = 14,

  /**
   * @generated from enum value: REQUEST_TYPE_DELETE_KEY_REQUEST = 15;
   */
  DELETE_KEY_REQUEST = 15,

  /**
   * @generated from enum value: REQUEST_TYPE_DELETE_KEY_REPLY = 16;
   */
  DELETE_KEY_REPLY = 16,

  /**
   * @generated from enum value: REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REQUEST = 17;
   */
  GET_BUCKET_DESCRIPTOR_REQUEST = 17,

  /**
   * @generated from enum value: REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REPLY = 18;
   */
  GET_BUCKET_DESCRIPTOR_REPLY = 18,

  /**
   * @generated from enum value: REQUEST_TYPE_RECOVERABLE_ERROR = 19;
   */
  RECOVERABLE_ERROR = 19,
}

/**
 * @generated from message kvstore.v1.CreateAccountRequest
 */
export declare class CreateAccountRequest extends Message<CreateAccountRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string owner = 2;
   */
  owner: string;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 3;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<CreateAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.CreateAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountRequest;

  static equals(a: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined, b: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.CreateAccountResponse
 */
export declare class CreateAccountResponse extends Message<CreateAccountResponse> {
  /**
   * @generated from field: kvstore.v1.AccountDescriptor account_descriptor = 1;
   */
  accountDescriptor?: AccountDescriptor;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 2;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<CreateAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.CreateAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountResponse;

  static equals(a: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined, b: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.DeleteAccountRequest
 */
export declare class DeleteAccountRequest extends Message<DeleteAccountRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string owner = 2;
   */
  owner: string;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 3;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<DeleteAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.DeleteAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountRequest;

  static equals(a: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined, b: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.DeleteAccountResponse
 */
export declare class DeleteAccountResponse extends Message<DeleteAccountResponse> {
  /**
   * @generated from field: bool ok = 1;
   */
  ok: boolean;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 2;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<DeleteAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.DeleteAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountResponse;

  static equals(a: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined, b: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.GetAccountDescriptorRequest
 */
export declare class GetAccountDescriptorRequest extends Message<GetAccountDescriptorRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  constructor(data?: PartialMessage<GetAccountDescriptorRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.GetAccountDescriptorRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountDescriptorRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountDescriptorRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountDescriptorRequest;

  static equals(a: GetAccountDescriptorRequest | PlainMessage<GetAccountDescriptorRequest> | undefined, b: GetAccountDescriptorRequest | PlainMessage<GetAccountDescriptorRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.GetAccountDescriptorResponse
 */
export declare class GetAccountDescriptorResponse extends Message<GetAccountDescriptorResponse> {
  /**
   * @generated from field: kvstore.v1.AccountDescriptor account_descriptor = 1;
   */
  accountDescriptor?: AccountDescriptor;

  constructor(data?: PartialMessage<GetAccountDescriptorResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.GetAccountDescriptorResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountDescriptorResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountDescriptorResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountDescriptorResponse;

  static equals(a: GetAccountDescriptorResponse | PlainMessage<GetAccountDescriptorResponse> | undefined, b: GetAccountDescriptorResponse | PlainMessage<GetAccountDescriptorResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.AccountDescriptor
 */
export declare class AccountDescriptor extends Message<AccountDescriptor> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string owner = 2;
   */
  owner: string;

  /**
   * @generated from field: google.protobuf.Timestamp created = 3;
   */
  created?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_updated = 4;
   */
  lastUpdated?: Timestamp;

  /**
   * @generated from field: uint64 bucket_count = 5;
   */
  bucketCount: bigint;

  /**
   * @generated from field: repeated string buckets = 6;
   */
  buckets: string[];

  constructor(data?: PartialMessage<AccountDescriptor>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.AccountDescriptor";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountDescriptor;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountDescriptor;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountDescriptor;

  static equals(a: AccountDescriptor | PlainMessage<AccountDescriptor> | undefined, b: AccountDescriptor | PlainMessage<AccountDescriptor> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.CreateBucketRequest
 */
export declare class CreateBucketRequest extends Message<CreateBucketRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string owner = 3;
   */
  owner: string;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 4;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<CreateBucketRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.CreateBucketRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateBucketRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateBucketRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateBucketRequest;

  static equals(a: CreateBucketRequest | PlainMessage<CreateBucketRequest> | undefined, b: CreateBucketRequest | PlainMessage<CreateBucketRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.CreateBucketResponse
 */
export declare class CreateBucketResponse extends Message<CreateBucketResponse> {
  /**
   * @generated from field: kvstore.v1.BucketDescriptor bucket_descriptor = 1;
   */
  bucketDescriptor?: BucketDescriptor;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 2;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<CreateBucketResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.CreateBucketResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateBucketResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateBucketResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateBucketResponse;

  static equals(a: CreateBucketResponse | PlainMessage<CreateBucketResponse> | undefined, b: CreateBucketResponse | PlainMessage<CreateBucketResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.DeleteBucketRequest
 */
export declare class DeleteBucketRequest extends Message<DeleteBucketRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 3;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<DeleteBucketRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.DeleteBucketRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBucketRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBucketRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBucketRequest;

  static equals(a: DeleteBucketRequest | PlainMessage<DeleteBucketRequest> | undefined, b: DeleteBucketRequest | PlainMessage<DeleteBucketRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.DeleteBucketResponse
 */
export declare class DeleteBucketResponse extends Message<DeleteBucketResponse> {
  /**
   * @generated from field: bool ok = 1;
   */
  ok: boolean;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 2;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<DeleteBucketResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.DeleteBucketResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBucketResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBucketResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBucketResponse;

  static equals(a: DeleteBucketResponse | PlainMessage<DeleteBucketResponse> | undefined, b: DeleteBucketResponse | PlainMessage<DeleteBucketResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.BucketDescriptor
 */
export declare class BucketDescriptor extends Message<BucketDescriptor> {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: uint64 size = 2;
   */
  size: bigint;

  /**
   * @generated from field: uint64 key_count = 3;
   */
  keyCount: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp created = 4;
   */
  created?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_updated = 5;
   */
  lastUpdated?: Timestamp;

  constructor(data?: PartialMessage<BucketDescriptor>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.BucketDescriptor";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BucketDescriptor;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BucketDescriptor;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BucketDescriptor;

  static equals(a: BucketDescriptor | PlainMessage<BucketDescriptor> | undefined, b: BucketDescriptor | PlainMessage<BucketDescriptor> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.GetBucketDescriptorRequest
 */
export declare class GetBucketDescriptorRequest extends Message<GetBucketDescriptorRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string bucket_name = 2;
   */
  bucketName: string;

  constructor(data?: PartialMessage<GetBucketDescriptorRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.GetBucketDescriptorRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBucketDescriptorRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBucketDescriptorRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBucketDescriptorRequest;

  static equals(a: GetBucketDescriptorRequest | PlainMessage<GetBucketDescriptorRequest> | undefined, b: GetBucketDescriptorRequest | PlainMessage<GetBucketDescriptorRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.GetBucketDescriptorResponse
 */
export declare class GetBucketDescriptorResponse extends Message<GetBucketDescriptorResponse> {
  /**
   * @generated from field: kvstore.v1.BucketDescriptor bucket_descriptor = 1;
   */
  bucketDescriptor?: BucketDescriptor;

  constructor(data?: PartialMessage<GetBucketDescriptorResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.GetBucketDescriptorResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBucketDescriptorResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBucketDescriptorResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBucketDescriptorResponse;

  static equals(a: GetBucketDescriptorResponse | PlainMessage<GetBucketDescriptorResponse> | undefined, b: GetBucketDescriptorResponse | PlainMessage<GetBucketDescriptorResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.GetKeyRequest
 */
export declare class GetKeyRequest extends Message<GetKeyRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string bucket_name = 2;
   */
  bucketName: string;

  /**
   * @generated from field: bytes key = 3;
   */
  key: Uint8Array;

  /**
   * @generated from field: optional uint32 version = 4;
   */
  version?: number;

  constructor(data?: PartialMessage<GetKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.GetKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyRequest;

  static equals(a: GetKeyRequest | PlainMessage<GetKeyRequest> | undefined, b: GetKeyRequest | PlainMessage<GetKeyRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.GetKeyResponse
 */
export declare class GetKeyResponse extends Message<GetKeyResponse> {
  /**
   * @generated from field: kvstore.v1.KeyValue key_value_pair = 1;
   */
  keyValuePair?: KeyValue;

  constructor(data?: PartialMessage<GetKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.GetKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyResponse;

  static equals(a: GetKeyResponse | PlainMessage<GetKeyResponse> | undefined, b: GetKeyResponse | PlainMessage<GetKeyResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.PutKeyRequest
 */
export declare class PutKeyRequest extends Message<PutKeyRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string bucket_name = 2;
   */
  bucketName: string;

  /**
   * @generated from field: kvstore.v1.KeyValue key_value_pair = 3;
   */
  keyValuePair?: KeyValue;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 4;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<PutKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.PutKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutKeyRequest;

  static equals(a: PutKeyRequest | PlainMessage<PutKeyRequest> | undefined, b: PutKeyRequest | PlainMessage<PutKeyRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.PutKeyResponse
 */
export declare class PutKeyResponse extends Message<PutKeyResponse> {
  /**
   * @generated from field: kvstore.v1.Transaction transaction = 1;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<PutKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.PutKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutKeyResponse;

  static equals(a: PutKeyResponse | PlainMessage<PutKeyResponse> | undefined, b: PutKeyResponse | PlainMessage<PutKeyResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.DeleteKeyRequest
 */
export declare class DeleteKeyRequest extends Message<DeleteKeyRequest> {
  /**
   * @generated from field: uint64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string bucket_name = 2;
   */
  bucketName: string;

  /**
   * @generated from field: bytes key = 3;
   */
  key: Uint8Array;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 4;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<DeleteKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.DeleteKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteKeyRequest;

  static equals(a: DeleteKeyRequest | PlainMessage<DeleteKeyRequest> | undefined, b: DeleteKeyRequest | PlainMessage<DeleteKeyRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.DeleteKeyResponse
 */
export declare class DeleteKeyResponse extends Message<DeleteKeyResponse> {
  /**
   * @generated from field: bool ok = 1;
   */
  ok: boolean;

  /**
   * @generated from field: kvstore.v1.Transaction transaction = 3;
   */
  transaction?: Transaction;

  constructor(data?: PartialMessage<DeleteKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.DeleteKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteKeyResponse;

  static equals(a: DeleteKeyResponse | PlainMessage<DeleteKeyResponse> | undefined, b: DeleteKeyResponse | PlainMessage<DeleteKeyResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.KeyValueDescriptor
 */
export declare class KeyValueDescriptor extends Message<KeyValueDescriptor> {
  /**
   * @generated from field: repeated uint32 versions = 1;
   */
  versions: number[];

  /**
   * @generated from field: bytes current_key = 2;
   */
  currentKey: Uint8Array;

  constructor(data?: PartialMessage<KeyValueDescriptor>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.KeyValueDescriptor";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyValueDescriptor;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyValueDescriptor;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyValueDescriptor;

  static equals(a: KeyValueDescriptor | PlainMessage<KeyValueDescriptor> | undefined, b: KeyValueDescriptor | PlainMessage<KeyValueDescriptor> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.ListKeyVersionsRequest
 */
export declare class ListKeyVersionsRequest extends Message<ListKeyVersionsRequest> {
  /**
   * @generated from field: bytes key = 1;
   */
  key: Uint8Array;

  constructor(data?: PartialMessage<ListKeyVersionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.ListKeyVersionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyVersionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyVersionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyVersionsRequest;

  static equals(a: ListKeyVersionsRequest | PlainMessage<ListKeyVersionsRequest> | undefined, b: ListKeyVersionsRequest | PlainMessage<ListKeyVersionsRequest> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.ListKeyVersionsResponse
 */
export declare class ListKeyVersionsResponse extends Message<ListKeyVersionsResponse> {
  /**
   * @generated from field: repeated uint32 versions = 1;
   */
  versions: number[];

  constructor(data?: PartialMessage<ListKeyVersionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.ListKeyVersionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyVersionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyVersionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyVersionsResponse;

  static equals(a: ListKeyVersionsResponse | PlainMessage<ListKeyVersionsResponse> | undefined, b: ListKeyVersionsResponse | PlainMessage<ListKeyVersionsResponse> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.KeyValue
 */
export declare class KeyValue extends Message<KeyValue> {
  /**
   * key is the key in bytes. An empty key is not allowed.
   *
   * @generated from field: bytes key = 1;
   */
  key: Uint8Array;

  /**
   * create_revision is the revision of last creation on this key.
   *
   * @generated from field: int64 create_revision = 2;
   */
  createRevision: bigint;

  /**
   * mod_revision is the revision of last modification on this key.
   *
   * @generated from field: int64 mod_revision = 3;
   */
  modRevision: bigint;

  /**
   * version is the version of the key. A deletion resets
   * the version to zero and any modification of the key
   * increases its version.
   *
   * @generated from field: uint32 version = 4;
   */
  version: number;

  /**
   * value is the value held by the key, in bytes.
   *
   * @generated from field: bytes value = 5;
   */
  value: Uint8Array;

  /**
   * lease is the ID of the lease that attached to key.
   * When the attached lease expires, the key will be deleted.
   * If lease is 0, then no lease is attached to the key.
   *
   * @generated from field: int64 lease = 6;
   */
  lease: bigint;

  constructor(data?: PartialMessage<KeyValue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.KeyValue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyValue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyValue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyValue;

  static equals(a: KeyValue | PlainMessage<KeyValue> | undefined, b: KeyValue | PlainMessage<KeyValue> | undefined): boolean;
}

/**
 * @generated from message kvstore.v1.Event
 */
export declare class Event extends Message<Event> {
  /**
   * type is the kind of event. If type is a PUT, it indicates
   * new data has been stored to the key. If type is a DELETE,
   * it indicates the key was deleted.
   *
   * @generated from field: kvstore.v1.KeyOperationType type = 1;
   */
  type: KeyOperationType;

  /**
   * kv holds the KeyValue for the event.
   * A PUT event contains current kv pair.
   * A PUT event with kv.Version=1 indicates the creation of a key.
   * A DELETE/EXPIRE event contains the deleted key with
   * its modification revision set to the revision of deletion.
   *
   * @generated from field: kvstore.v1.KeyValue kv = 2;
   */
  kv?: KeyValue;

  /**
   * prev_kv holds the key-value pair before the event happens.
   *
   * @generated from field: optional kvstore.v1.KeyValue prev_kv = 3;
   */
  prevKv?: KeyValue;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kvstore.v1.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

