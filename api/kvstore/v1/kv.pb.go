// Copyright 2015 The etcd Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: kvstore/v1/kv.proto

package kvstorev1

import (
	v1 "a13s.io/api/errors/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyOperationType int32

const (
	KeyOperationType_KEY_OPERATION_TYPE_UNSPECIFIED KeyOperationType = 0
	KeyOperationType_KEY_OPERATION_TYPE_GET         KeyOperationType = 1
	KeyOperationType_KEY_OPERATION_TYPE_PUT         KeyOperationType = 2
	KeyOperationType_KEY_OPERATION_TYPE_DELETE      KeyOperationType = 3
)

// Enum value maps for KeyOperationType.
var (
	KeyOperationType_name = map[int32]string{
		0: "KEY_OPERATION_TYPE_UNSPECIFIED",
		1: "KEY_OPERATION_TYPE_GET",
		2: "KEY_OPERATION_TYPE_PUT",
		3: "KEY_OPERATION_TYPE_DELETE",
	}
	KeyOperationType_value = map[string]int32{
		"KEY_OPERATION_TYPE_UNSPECIFIED": 0,
		"KEY_OPERATION_TYPE_GET":         1,
		"KEY_OPERATION_TYPE_PUT":         2,
		"KEY_OPERATION_TYPE_DELETE":      3,
	}
)

func (x KeyOperationType) Enum() *KeyOperationType {
	p := new(KeyOperationType)
	*p = x
	return p
}

func (x KeyOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_kvstore_v1_kv_proto_enumTypes[0].Descriptor()
}

func (KeyOperationType) Type() protoreflect.EnumType {
	return &file_kvstore_v1_kv_proto_enumTypes[0]
}

func (x KeyOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyOperationType.Descriptor instead.
func (KeyOperationType) EnumDescriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{0}
}

type KVStoreWrapper_RequestType int32

const (
	KVStoreWrapper_REQUEST_TYPE_UNSPECIFIED                    KVStoreWrapper_RequestType = 0
	KVStoreWrapper_REQUEST_TYPE_CREATE_ACCOUNT_REQUEST         KVStoreWrapper_RequestType = 1
	KVStoreWrapper_REQUEST_TYPE_CREATE_ACCOUNT_REPLY           KVStoreWrapper_RequestType = 2
	KVStoreWrapper_REQUEST_TYPE_DELETE_ACCOUNT_REQUEST         KVStoreWrapper_RequestType = 3
	KVStoreWrapper_REQUEST_TYPE_DELETE_ACCOUNT_REPLY           KVStoreWrapper_RequestType = 4
	KVStoreWrapper_REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REQUEST KVStoreWrapper_RequestType = 5
	KVStoreWrapper_REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REPLY   KVStoreWrapper_RequestType = 6
	KVStoreWrapper_REQUEST_TYPE_CREATE_BUCKET_REQUEST          KVStoreWrapper_RequestType = 7
	KVStoreWrapper_REQUEST_TYPE_CREATE_BUCKET_REPLY            KVStoreWrapper_RequestType = 8
	KVStoreWrapper_REQUEST_TYPE_DELETE_BUCKET_REQUEST          KVStoreWrapper_RequestType = 9
	KVStoreWrapper_REQUEST_TYPE_DELETE_BUCKET_REPLY            KVStoreWrapper_RequestType = 10
	KVStoreWrapper_REQUEST_TYPE_GET_KEY_REQUEST                KVStoreWrapper_RequestType = 11
	KVStoreWrapper_REQUEST_TYPE_GET_KEY_REPLY                  KVStoreWrapper_RequestType = 12
	KVStoreWrapper_REQUEST_TYPE_PUT_KEY_REQUEST                KVStoreWrapper_RequestType = 13
	KVStoreWrapper_REQUEST_TYPE_PUT_KEY_REPLY                  KVStoreWrapper_RequestType = 14
	KVStoreWrapper_REQUEST_TYPE_DELETE_KEY_REQUEST             KVStoreWrapper_RequestType = 15
	KVStoreWrapper_REQUEST_TYPE_DELETE_KEY_REPLY               KVStoreWrapper_RequestType = 16
	KVStoreWrapper_REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REQUEST  KVStoreWrapper_RequestType = 17
	KVStoreWrapper_REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REPLY    KVStoreWrapper_RequestType = 18
	KVStoreWrapper_REQUEST_TYPE_RECOVERABLE_ERROR              KVStoreWrapper_RequestType = 19
)

// Enum value maps for KVStoreWrapper_RequestType.
var (
	KVStoreWrapper_RequestType_name = map[int32]string{
		0:  "REQUEST_TYPE_UNSPECIFIED",
		1:  "REQUEST_TYPE_CREATE_ACCOUNT_REQUEST",
		2:  "REQUEST_TYPE_CREATE_ACCOUNT_REPLY",
		3:  "REQUEST_TYPE_DELETE_ACCOUNT_REQUEST",
		4:  "REQUEST_TYPE_DELETE_ACCOUNT_REPLY",
		5:  "REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REQUEST",
		6:  "REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REPLY",
		7:  "REQUEST_TYPE_CREATE_BUCKET_REQUEST",
		8:  "REQUEST_TYPE_CREATE_BUCKET_REPLY",
		9:  "REQUEST_TYPE_DELETE_BUCKET_REQUEST",
		10: "REQUEST_TYPE_DELETE_BUCKET_REPLY",
		11: "REQUEST_TYPE_GET_KEY_REQUEST",
		12: "REQUEST_TYPE_GET_KEY_REPLY",
		13: "REQUEST_TYPE_PUT_KEY_REQUEST",
		14: "REQUEST_TYPE_PUT_KEY_REPLY",
		15: "REQUEST_TYPE_DELETE_KEY_REQUEST",
		16: "REQUEST_TYPE_DELETE_KEY_REPLY",
		17: "REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REQUEST",
		18: "REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REPLY",
		19: "REQUEST_TYPE_RECOVERABLE_ERROR",
	}
	KVStoreWrapper_RequestType_value = map[string]int32{
		"REQUEST_TYPE_UNSPECIFIED":                    0,
		"REQUEST_TYPE_CREATE_ACCOUNT_REQUEST":         1,
		"REQUEST_TYPE_CREATE_ACCOUNT_REPLY":           2,
		"REQUEST_TYPE_DELETE_ACCOUNT_REQUEST":         3,
		"REQUEST_TYPE_DELETE_ACCOUNT_REPLY":           4,
		"REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REQUEST": 5,
		"REQUEST_TYPE_GET_ACCOUNT_DESCRIPTOR_REPLY":   6,
		"REQUEST_TYPE_CREATE_BUCKET_REQUEST":          7,
		"REQUEST_TYPE_CREATE_BUCKET_REPLY":            8,
		"REQUEST_TYPE_DELETE_BUCKET_REQUEST":          9,
		"REQUEST_TYPE_DELETE_BUCKET_REPLY":            10,
		"REQUEST_TYPE_GET_KEY_REQUEST":                11,
		"REQUEST_TYPE_GET_KEY_REPLY":                  12,
		"REQUEST_TYPE_PUT_KEY_REQUEST":                13,
		"REQUEST_TYPE_PUT_KEY_REPLY":                  14,
		"REQUEST_TYPE_DELETE_KEY_REQUEST":             15,
		"REQUEST_TYPE_DELETE_KEY_REPLY":               16,
		"REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REQUEST":  17,
		"REQUEST_TYPE_GET_BUCKET_DESCRIPTOR_REPLY":    18,
		"REQUEST_TYPE_RECOVERABLE_ERROR":              19,
	}
)

func (x KVStoreWrapper_RequestType) Enum() *KVStoreWrapper_RequestType {
	p := new(KVStoreWrapper_RequestType)
	*p = x
	return p
}

func (x KVStoreWrapper_RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KVStoreWrapper_RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_kvstore_v1_kv_proto_enumTypes[1].Descriptor()
}

func (KVStoreWrapper_RequestType) Type() protoreflect.EnumType {
	return &file_kvstore_v1_kv_proto_enumTypes[1]
}

func (x KVStoreWrapper_RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KVStoreWrapper_RequestType.Descriptor instead.
func (KVStoreWrapper_RequestType) EnumDescriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{0, 0}
}

type KVStoreWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint64                     `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Bucket  string                     `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Typ     KVStoreWrapper_RequestType `protobuf:"varint,3,opt,name=typ,proto3,enum=kvstore.v1.KVStoreWrapper_RequestType" json:"typ,omitempty"`
	// Types that are assignable to Payload:
	//	*KVStoreWrapper_CreateAccountRequest
	//	*KVStoreWrapper_CreateAccountReply
	//	*KVStoreWrapper_DeleteAccountRequest
	//	*KVStoreWrapper_DeleteAccountReply
	//	*KVStoreWrapper_GetAccountDescriptorRequest
	//	*KVStoreWrapper_GetAccountDescriptorReply
	//	*KVStoreWrapper_CreateBucketRequest
	//	*KVStoreWrapper_CreateBucketReply
	//	*KVStoreWrapper_DeleteBucketRequest
	//	*KVStoreWrapper_DeleteBucketReply
	//	*KVStoreWrapper_GetKeyRequest
	//	*KVStoreWrapper_GetKeyReply
	//	*KVStoreWrapper_PutKeyRequest
	//	*KVStoreWrapper_PutKeyReply
	//	*KVStoreWrapper_DeleteKeyRequest
	//	*KVStoreWrapper_DeleteKeyReply
	//	*KVStoreWrapper_GetBucketDescriptorRequest
	//	*KVStoreWrapper_GetBucketDescriptorReply
	//	*KVStoreWrapper_Error
	Payload isKVStoreWrapper_Payload `protobuf_oneof:"payload"`
}

func (x *KVStoreWrapper) Reset() {
	*x = KVStoreWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVStoreWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVStoreWrapper) ProtoMessage() {}

func (x *KVStoreWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVStoreWrapper.ProtoReflect.Descriptor instead.
func (*KVStoreWrapper) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{0}
}

func (x *KVStoreWrapper) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *KVStoreWrapper) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *KVStoreWrapper) GetTyp() KVStoreWrapper_RequestType {
	if x != nil {
		return x.Typ
	}
	return KVStoreWrapper_REQUEST_TYPE_UNSPECIFIED
}

func (m *KVStoreWrapper) GetPayload() isKVStoreWrapper_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *KVStoreWrapper) GetCreateAccountRequest() *CreateAccountRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_CreateAccountRequest); ok {
		return x.CreateAccountRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetCreateAccountReply() *CreateAccountResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_CreateAccountReply); ok {
		return x.CreateAccountReply
	}
	return nil
}

func (x *KVStoreWrapper) GetDeleteAccountRequest() *DeleteAccountRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_DeleteAccountRequest); ok {
		return x.DeleteAccountRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetDeleteAccountReply() *DeleteAccountResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_DeleteAccountReply); ok {
		return x.DeleteAccountReply
	}
	return nil
}

func (x *KVStoreWrapper) GetGetAccountDescriptorRequest() *GetAccountDescriptorRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_GetAccountDescriptorRequest); ok {
		return x.GetAccountDescriptorRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetGetAccountDescriptorReply() *GetAccountDescriptorResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_GetAccountDescriptorReply); ok {
		return x.GetAccountDescriptorReply
	}
	return nil
}

func (x *KVStoreWrapper) GetCreateBucketRequest() *CreateBucketRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_CreateBucketRequest); ok {
		return x.CreateBucketRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetCreateBucketReply() *CreateBucketResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_CreateBucketReply); ok {
		return x.CreateBucketReply
	}
	return nil
}

func (x *KVStoreWrapper) GetDeleteBucketRequest() *DeleteBucketRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_DeleteBucketRequest); ok {
		return x.DeleteBucketRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetDeleteBucketReply() *DeleteBucketResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_DeleteBucketReply); ok {
		return x.DeleteBucketReply
	}
	return nil
}

func (x *KVStoreWrapper) GetGetKeyRequest() *GetKeyRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_GetKeyRequest); ok {
		return x.GetKeyRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetGetKeyReply() *GetKeyResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_GetKeyReply); ok {
		return x.GetKeyReply
	}
	return nil
}

func (x *KVStoreWrapper) GetPutKeyRequest() *PutKeyRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_PutKeyRequest); ok {
		return x.PutKeyRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetPutKeyReply() *PutKeyResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_PutKeyReply); ok {
		return x.PutKeyReply
	}
	return nil
}

func (x *KVStoreWrapper) GetDeleteKeyRequest() *DeleteKeyRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_DeleteKeyRequest); ok {
		return x.DeleteKeyRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetDeleteKeyReply() *DeleteKeyResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_DeleteKeyReply); ok {
		return x.DeleteKeyReply
	}
	return nil
}

func (x *KVStoreWrapper) GetGetBucketDescriptorRequest() *GetBucketDescriptorRequest {
	if x, ok := x.GetPayload().(*KVStoreWrapper_GetBucketDescriptorRequest); ok {
		return x.GetBucketDescriptorRequest
	}
	return nil
}

func (x *KVStoreWrapper) GetGetBucketDescriptorReply() *GetBucketDescriptorResponse {
	if x, ok := x.GetPayload().(*KVStoreWrapper_GetBucketDescriptorReply); ok {
		return x.GetBucketDescriptorReply
	}
	return nil
}

func (x *KVStoreWrapper) GetError() *v1.Error {
	if x, ok := x.GetPayload().(*KVStoreWrapper_Error); ok {
		return x.Error
	}
	return nil
}

type isKVStoreWrapper_Payload interface {
	isKVStoreWrapper_Payload()
}

type KVStoreWrapper_CreateAccountRequest struct {
	CreateAccountRequest *CreateAccountRequest `protobuf:"bytes,4,opt,name=create_account_request,json=createAccountRequest,proto3,oneof"`
}

type KVStoreWrapper_CreateAccountReply struct {
	CreateAccountReply *CreateAccountResponse `protobuf:"bytes,5,opt,name=create_account_reply,json=createAccountReply,proto3,oneof"`
}

type KVStoreWrapper_DeleteAccountRequest struct {
	DeleteAccountRequest *DeleteAccountRequest `protobuf:"bytes,6,opt,name=delete_account_request,json=deleteAccountRequest,proto3,oneof"`
}

type KVStoreWrapper_DeleteAccountReply struct {
	DeleteAccountReply *DeleteAccountResponse `protobuf:"bytes,7,opt,name=delete_account_reply,json=deleteAccountReply,proto3,oneof"`
}

type KVStoreWrapper_GetAccountDescriptorRequest struct {
	GetAccountDescriptorRequest *GetAccountDescriptorRequest `protobuf:"bytes,8,opt,name=get_account_descriptor_request,json=getAccountDescriptorRequest,proto3,oneof"`
}

type KVStoreWrapper_GetAccountDescriptorReply struct {
	GetAccountDescriptorReply *GetAccountDescriptorResponse `protobuf:"bytes,9,opt,name=get_account_descriptor_reply,json=getAccountDescriptorReply,proto3,oneof"`
}

type KVStoreWrapper_CreateBucketRequest struct {
	CreateBucketRequest *CreateBucketRequest `protobuf:"bytes,10,opt,name=create_bucket_request,json=createBucketRequest,proto3,oneof"`
}

type KVStoreWrapper_CreateBucketReply struct {
	CreateBucketReply *CreateBucketResponse `protobuf:"bytes,11,opt,name=create_bucket_reply,json=createBucketReply,proto3,oneof"`
}

type KVStoreWrapper_DeleteBucketRequest struct {
	DeleteBucketRequest *DeleteBucketRequest `protobuf:"bytes,12,opt,name=delete_bucket_request,json=deleteBucketRequest,proto3,oneof"`
}

type KVStoreWrapper_DeleteBucketReply struct {
	DeleteBucketReply *DeleteBucketResponse `protobuf:"bytes,13,opt,name=delete_bucket_reply,json=deleteBucketReply,proto3,oneof"`
}

type KVStoreWrapper_GetKeyRequest struct {
	GetKeyRequest *GetKeyRequest `protobuf:"bytes,14,opt,name=get_key_request,json=getKeyRequest,proto3,oneof"`
}

type KVStoreWrapper_GetKeyReply struct {
	GetKeyReply *GetKeyResponse `protobuf:"bytes,15,opt,name=get_key_reply,json=getKeyReply,proto3,oneof"`
}

type KVStoreWrapper_PutKeyRequest struct {
	PutKeyRequest *PutKeyRequest `protobuf:"bytes,16,opt,name=put_key_request,json=putKeyRequest,proto3,oneof"`
}

type KVStoreWrapper_PutKeyReply struct {
	PutKeyReply *PutKeyResponse `protobuf:"bytes,17,opt,name=put_key_reply,json=putKeyReply,proto3,oneof"`
}

type KVStoreWrapper_DeleteKeyRequest struct {
	DeleteKeyRequest *DeleteKeyRequest `protobuf:"bytes,18,opt,name=delete_key_request,json=deleteKeyRequest,proto3,oneof"`
}

type KVStoreWrapper_DeleteKeyReply struct {
	DeleteKeyReply *DeleteKeyResponse `protobuf:"bytes,19,opt,name=delete_key_reply,json=deleteKeyReply,proto3,oneof"`
}

type KVStoreWrapper_GetBucketDescriptorRequest struct {
	GetBucketDescriptorRequest *GetBucketDescriptorRequest `protobuf:"bytes,20,opt,name=get_bucket_descriptor_request,json=getBucketDescriptorRequest,proto3,oneof"`
}

type KVStoreWrapper_GetBucketDescriptorReply struct {
	GetBucketDescriptorReply *GetBucketDescriptorResponse `protobuf:"bytes,21,opt,name=get_bucket_descriptor_reply,json=getBucketDescriptorReply,proto3,oneof"`
}

type KVStoreWrapper_Error struct {
	Error *v1.Error `protobuf:"bytes,22,opt,name=error,proto3,oneof"`
}

func (*KVStoreWrapper_CreateAccountRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_CreateAccountReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_DeleteAccountRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_DeleteAccountReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_GetAccountDescriptorRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_GetAccountDescriptorReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_CreateBucketRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_CreateBucketReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_DeleteBucketRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_DeleteBucketReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_GetKeyRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_GetKeyReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_PutKeyRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_PutKeyReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_DeleteKeyRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_DeleteKeyReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_GetBucketDescriptorRequest) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_GetBucketDescriptorReply) isKVStoreWrapper_Payload() {}

func (*KVStoreWrapper_Error) isKVStoreWrapper_Payload() {}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint64       `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Owner       string       `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Transaction *Transaction `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccountRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CreateAccountRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateAccountRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type CreateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountDescriptor *AccountDescriptor `protobuf:"bytes,1,opt,name=account_descriptor,json=accountDescriptor,proto3" json:"account_descriptor,omitempty"`
	Transaction       *Transaction       `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAccountResponse) GetAccountDescriptor() *AccountDescriptor {
	if x != nil {
		return x.AccountDescriptor
	}
	return nil
}

func (x *CreateAccountResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint64       `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Owner       string       `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Transaction *Transaction `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *DeleteAccountRequest) Reset() {
	*x = DeleteAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRequest) ProtoMessage() {}

func (x *DeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteAccountRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *DeleteAccountRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *DeleteAccountRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok          bool         `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Transaction *Transaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *DeleteAccountResponse) Reset() {
	*x = DeleteAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountResponse) ProtoMessage() {}

func (x *DeleteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAccountResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteAccountResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GetAccountDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetAccountDescriptorRequest) Reset() {
	*x = GetAccountDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountDescriptorRequest) ProtoMessage() {}

func (x *GetAccountDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountDescriptorRequest.ProtoReflect.Descriptor instead.
func (*GetAccountDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountDescriptorRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type GetAccountDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountDescriptor *AccountDescriptor `protobuf:"bytes,1,opt,name=account_descriptor,json=accountDescriptor,proto3" json:"account_descriptor,omitempty"`
}

func (x *GetAccountDescriptorResponse) Reset() {
	*x = GetAccountDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountDescriptorResponse) ProtoMessage() {}

func (x *GetAccountDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountDescriptorResponse.ProtoReflect.Descriptor instead.
func (*GetAccountDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{6}
}

func (x *GetAccountDescriptorResponse) GetAccountDescriptor() *AccountDescriptor {
	if x != nil {
		return x.AccountDescriptor
	}
	return nil
}

type AccountDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint64                 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Owner       string                 `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	BucketCount uint64                 `protobuf:"varint,5,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	Buckets     []string               `protobuf:"bytes,6,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *AccountDescriptor) Reset() {
	*x = AccountDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDescriptor) ProtoMessage() {}

func (x *AccountDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDescriptor.ProtoReflect.Descriptor instead.
func (*AccountDescriptor) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{7}
}

func (x *AccountDescriptor) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountDescriptor) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *AccountDescriptor) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AccountDescriptor) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *AccountDescriptor) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

func (x *AccountDescriptor) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type CreateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint64       `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner       string       `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Transaction *Transaction `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{8}
}

func (x *CreateBucketRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CreateBucketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBucketRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateBucketRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type CreateBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketDescriptor *BucketDescriptor `protobuf:"bytes,1,opt,name=bucket_descriptor,json=bucketDescriptor,proto3" json:"bucket_descriptor,omitempty"`
	Transaction      *Transaction      `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{9}
}

func (x *CreateBucketResponse) GetBucketDescriptor() *BucketDescriptor {
	if x != nil {
		return x.BucketDescriptor
	}
	return nil
}

func (x *CreateBucketResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint64       `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Transaction *Transaction `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *DeleteBucketRequest) Reset() {
	*x = DeleteBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketRequest) ProtoMessage() {}

func (x *DeleteBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketRequest.ProtoReflect.Descriptor instead.
func (*DeleteBucketRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteBucketRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *DeleteBucketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteBucketRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok          bool         `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Transaction *Transaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *DeleteBucketResponse) Reset() {
	*x = DeleteBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketResponse) ProtoMessage() {}

func (x *DeleteBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketResponse.ProtoReflect.Descriptor instead.
func (*DeleteBucketResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteBucketResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteBucketResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type BucketDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner       string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Size        uint64                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	KeyCount    uint64                 `protobuf:"varint,3,opt,name=key_count,json=keyCount,proto3" json:"key_count,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *BucketDescriptor) Reset() {
	*x = BucketDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketDescriptor) ProtoMessage() {}

func (x *BucketDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketDescriptor.ProtoReflect.Descriptor instead.
func (*BucketDescriptor) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{12}
}

func (x *BucketDescriptor) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *BucketDescriptor) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BucketDescriptor) GetKeyCount() uint64 {
	if x != nil {
		return x.KeyCount
	}
	return 0
}

func (x *BucketDescriptor) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BucketDescriptor) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type GetBucketDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BucketName string `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
}

func (x *GetBucketDescriptorRequest) Reset() {
	*x = GetBucketDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketDescriptorRequest) ProtoMessage() {}

func (x *GetBucketDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketDescriptorRequest.ProtoReflect.Descriptor instead.
func (*GetBucketDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{13}
}

func (x *GetBucketDescriptorRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetBucketDescriptorRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type GetBucketDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketDescriptor *BucketDescriptor `protobuf:"bytes,1,opt,name=bucket_descriptor,json=bucketDescriptor,proto3" json:"bucket_descriptor,omitempty"`
}

func (x *GetBucketDescriptorResponse) Reset() {
	*x = GetBucketDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketDescriptorResponse) ProtoMessage() {}

func (x *GetBucketDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketDescriptorResponse.ProtoReflect.Descriptor instead.
func (*GetBucketDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{14}
}

func (x *GetBucketDescriptorResponse) GetBucketDescriptor() *BucketDescriptor {
	if x != nil {
		return x.BucketDescriptor
	}
	return nil
}

type GetKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint64  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BucketName string  `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Key        string  `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Version    *uint32 `protobuf:"varint,4,opt,name=version,proto3,oneof" json:"version,omitempty"`
}

func (x *GetKeyRequest) Reset() {
	*x = GetKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyRequest) ProtoMessage() {}

func (x *GetKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyRequest.ProtoReflect.Descriptor instead.
func (*GetKeyRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{15}
}

func (x *GetKeyRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetKeyRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetKeyRequest) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type GetKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyValuePair *KeyValue `protobuf:"bytes,1,opt,name=key_value_pair,json=keyValuePair,proto3" json:"key_value_pair,omitempty"`
}

func (x *GetKeyResponse) Reset() {
	*x = GetKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyResponse) ProtoMessage() {}

func (x *GetKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyResponse.ProtoReflect.Descriptor instead.
func (*GetKeyResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{16}
}

func (x *GetKeyResponse) GetKeyValuePair() *KeyValue {
	if x != nil {
		return x.KeyValuePair
	}
	return nil
}

type PutKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    uint64       `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BucketName   string       `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	KeyValuePair *KeyValue    `protobuf:"bytes,3,opt,name=key_value_pair,json=keyValuePair,proto3" json:"key_value_pair,omitempty"`
	Transaction  *Transaction `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *PutKeyRequest) Reset() {
	*x = PutKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutKeyRequest) ProtoMessage() {}

func (x *PutKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutKeyRequest.ProtoReflect.Descriptor instead.
func (*PutKeyRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{17}
}

func (x *PutKeyRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PutKeyRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *PutKeyRequest) GetKeyValuePair() *KeyValue {
	if x != nil {
		return x.KeyValuePair
	}
	return nil
}

func (x *PutKeyRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type PutKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *PutKeyResponse) Reset() {
	*x = PutKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutKeyResponse) ProtoMessage() {}

func (x *PutKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutKeyResponse.ProtoReflect.Descriptor instead.
func (*PutKeyResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{18}
}

func (x *PutKeyResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   uint64       `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BucketName  string       `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Key         string       `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Transaction *Transaction `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *DeleteKeyRequest) Reset() {
	*x = DeleteKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyRequest) ProtoMessage() {}

func (x *DeleteKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteKeyRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteKeyRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *DeleteKeyRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DeleteKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteKeyRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type DeleteKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok          bool         `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Transaction *Transaction `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *DeleteKeyResponse) Reset() {
	*x = DeleteKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyResponse) ProtoMessage() {}

func (x *DeleteKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteKeyResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteKeyResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteKeyResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type KeyValueDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions   []uint32 `protobuf:"varint,1,rep,packed,name=versions,proto3" json:"versions,omitempty"`
	CurrentKey []byte   `protobuf:"bytes,2,opt,name=current_key,json=currentKey,proto3" json:"current_key,omitempty"`
}

func (x *KeyValueDescriptor) Reset() {
	*x = KeyValueDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueDescriptor) ProtoMessage() {}

func (x *KeyValueDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueDescriptor.ProtoReflect.Descriptor instead.
func (*KeyValueDescriptor) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{21}
}

func (x *KeyValueDescriptor) GetVersions() []uint32 {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *KeyValueDescriptor) GetCurrentKey() []byte {
	if x != nil {
		return x.CurrentKey
	}
	return nil
}

type ListKeyVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ListKeyVersionsRequest) Reset() {
	*x = ListKeyVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeyVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyVersionsRequest) ProtoMessage() {}

func (x *ListKeyVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListKeyVersionsRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{22}
}

func (x *ListKeyVersionsRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type ListKeyVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []uint32 `protobuf:"varint,1,rep,packed,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ListKeyVersionsResponse) Reset() {
	*x = ListKeyVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeyVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyVersionsResponse) ProtoMessage() {}

func (x *ListKeyVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListKeyVersionsResponse) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{23}
}

func (x *ListKeyVersionsResponse) GetVersions() []uint32 {
	if x != nil {
		return x.Versions
	}
	return nil
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is the key in bytes. An empty key is not allowed.
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// create_revision is the revision of last creation on this key.
	CreateRevision int64 `protobuf:"varint,2,opt,name=create_revision,json=createRevision,proto3" json:"create_revision,omitempty"`
	// mod_revision is the revision of last modification on this key.
	ModRevision int64 `protobuf:"varint,3,opt,name=mod_revision,json=modRevision,proto3" json:"mod_revision,omitempty"`
	// version is the version of the key. A deletion resets
	// the version to zero and any modification of the key
	// increases its version.
	Version uint64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// value is the value held by the key, in bytes.
	Value []byte `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// lease is the ID of the lease that attached to key.
	// When the attached lease expires, the key will be deleted.
	// If lease is 0, then no lease is attached to the key.
	Lease int64 `protobuf:"varint,6,opt,name=lease,proto3" json:"lease,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{24}
}

func (x *KeyValue) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValue) GetCreateRevision() int64 {
	if x != nil {
		return x.CreateRevision
	}
	return 0
}

func (x *KeyValue) GetModRevision() int64 {
	if x != nil {
		return x.ModRevision
	}
	return 0
}

func (x *KeyValue) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *KeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KeyValue) GetLease() int64 {
	if x != nil {
		return x.Lease
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the kind of event. If type is a PUT, it indicates
	// new data has been stored to the key. If type is a DELETE,
	// it indicates the key was deleted.
	Type KeyOperationType `protobuf:"varint,1,opt,name=type,proto3,enum=kvstore.v1.KeyOperationType" json:"type,omitempty"`
	// kv holds the KeyValue for the event.
	// A PUT event contains current kv pair.
	// A PUT event with kv.Version=1 indicates the creation of a key.
	// A DELETE/EXPIRE event contains the deleted key with
	// its modification revision set to the revision of deletion.
	Kv *KeyValue `protobuf:"bytes,2,opt,name=kv,proto3" json:"kv,omitempty"`
	// prev_kv holds the key-value pair before the event happens.
	PrevKv *KeyValue `protobuf:"bytes,3,opt,name=prev_kv,json=prevKv,proto3,oneof" json:"prev_kv,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvstore_v1_kv_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kv_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kv_proto_rawDescGZIP(), []int{25}
}

func (x *Event) GetType() KeyOperationType {
	if x != nil {
		return x.Type
	}
	return KeyOperationType_KEY_OPERATION_TYPE_UNSPECIFIED
}

func (x *Event) GetKv() *KeyValue {
	if x != nil {
		return x.Kv
	}
	return nil
}

func (x *Event) GetPrevKv() *KeyValue {
	if x != nil {
		return x.PrevKv
	}
	return nil
}

var File_kvstore_v1_kv_proto protoreflect.FileDescriptor

var file_kvstore_v1_kv_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x76, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x16, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x13, 0x0a, 0x0e, 0x4b, 0x56,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x38,
	0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x56, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x58, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x55, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x16, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6e, 0x0a, 0x1e, 0x67, 0x65,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x67,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1c, 0x67, 0x65,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x67, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x55, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52,
	0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x55, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x13, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a,
	0x0f, 0x67, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x75, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x75, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x70, 0x75, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x70, 0x75, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x12, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x10, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x6b, 0x0a, 0x1d, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x67, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x68, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x18, 0x67, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x95, 0x06, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4c,
	0x59, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4c,
	0x59, 0x10, 0x04, 0x12, 0x2f, 0x0a, 0x2b, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x05, 0x12, 0x2d, 0x0a, 0x29, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4c,
	0x59, 0x10, 0x06, 0x12, 0x26, 0x0a, 0x22, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10,
	0x08, 0x12, 0x26, 0x0a, 0x22, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x09, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x0a, 0x12,
	0x20, 0x0a, 0x1c, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10,
	0x0c, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x55, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x0d, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4c,
	0x59, 0x10, 0x0e, 0x12, 0x23, 0x0a, 0x1f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0f, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x10, 0x12, 0x2e, 0x0a, 0x2a, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x4f,
	0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x11, 0x12, 0x2c, 0x0a, 0x28, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x4f,
	0x52, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x12, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45,
	0x52, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x13, 0x42, 0x09, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x6c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0xfa, 0x01,
	0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3d,
	0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x11, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x76, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x6f, 0x6b, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce,
	0x01, 0x0a, 0x10, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x5c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x11,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x50, 0x61, 0x69, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a,
	0x0e, 0x50, 0x75, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x12,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22,
	0x2a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f,
	0x64, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x02, 0x6b, 0x76, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x6b, 0x76,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x76, 0x4b, 0x76, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72,
	0x65, 0x76, 0x5f, 0x6b, 0x76, 0x2a, 0x8d, 0x01, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x4b, 0x45,
	0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45,
	0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4b, 0x45, 0x59, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x03, 0x42, 0x8c, 0x01, 0x0a, 0x16, 0x69, 0x6f, 0x2e, 0x61, 0x31, 0x33,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x42, 0x07, 0x4b, 0x76, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x20, 0x61, 0x31, 0x33,
	0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x4b, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x4b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0a, 0x4b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16,
	0x4b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x4b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kvstore_v1_kv_proto_rawDescOnce sync.Once
	file_kvstore_v1_kv_proto_rawDescData = file_kvstore_v1_kv_proto_rawDesc
)

func file_kvstore_v1_kv_proto_rawDescGZIP() []byte {
	file_kvstore_v1_kv_proto_rawDescOnce.Do(func() {
		file_kvstore_v1_kv_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvstore_v1_kv_proto_rawDescData)
	})
	return file_kvstore_v1_kv_proto_rawDescData
}

var file_kvstore_v1_kv_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kvstore_v1_kv_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_kvstore_v1_kv_proto_goTypes = []interface{}{
	(KeyOperationType)(0),                // 0: kvstore.v1.KeyOperationType
	(KVStoreWrapper_RequestType)(0),      // 1: kvstore.v1.KVStoreWrapper.RequestType
	(*KVStoreWrapper)(nil),               // 2: kvstore.v1.KVStoreWrapper
	(*CreateAccountRequest)(nil),         // 3: kvstore.v1.CreateAccountRequest
	(*CreateAccountResponse)(nil),        // 4: kvstore.v1.CreateAccountResponse
	(*DeleteAccountRequest)(nil),         // 5: kvstore.v1.DeleteAccountRequest
	(*DeleteAccountResponse)(nil),        // 6: kvstore.v1.DeleteAccountResponse
	(*GetAccountDescriptorRequest)(nil),  // 7: kvstore.v1.GetAccountDescriptorRequest
	(*GetAccountDescriptorResponse)(nil), // 8: kvstore.v1.GetAccountDescriptorResponse
	(*AccountDescriptor)(nil),            // 9: kvstore.v1.AccountDescriptor
	(*CreateBucketRequest)(nil),          // 10: kvstore.v1.CreateBucketRequest
	(*CreateBucketResponse)(nil),         // 11: kvstore.v1.CreateBucketResponse
	(*DeleteBucketRequest)(nil),          // 12: kvstore.v1.DeleteBucketRequest
	(*DeleteBucketResponse)(nil),         // 13: kvstore.v1.DeleteBucketResponse
	(*BucketDescriptor)(nil),             // 14: kvstore.v1.BucketDescriptor
	(*GetBucketDescriptorRequest)(nil),   // 15: kvstore.v1.GetBucketDescriptorRequest
	(*GetBucketDescriptorResponse)(nil),  // 16: kvstore.v1.GetBucketDescriptorResponse
	(*GetKeyRequest)(nil),                // 17: kvstore.v1.GetKeyRequest
	(*GetKeyResponse)(nil),               // 18: kvstore.v1.GetKeyResponse
	(*PutKeyRequest)(nil),                // 19: kvstore.v1.PutKeyRequest
	(*PutKeyResponse)(nil),               // 20: kvstore.v1.PutKeyResponse
	(*DeleteKeyRequest)(nil),             // 21: kvstore.v1.DeleteKeyRequest
	(*DeleteKeyResponse)(nil),            // 22: kvstore.v1.DeleteKeyResponse
	(*KeyValueDescriptor)(nil),           // 23: kvstore.v1.KeyValueDescriptor
	(*ListKeyVersionsRequest)(nil),       // 24: kvstore.v1.ListKeyVersionsRequest
	(*ListKeyVersionsResponse)(nil),      // 25: kvstore.v1.ListKeyVersionsResponse
	(*KeyValue)(nil),                     // 26: kvstore.v1.KeyValue
	(*Event)(nil),                        // 27: kvstore.v1.Event
	(*v1.Error)(nil),                     // 28: errors.v1.Error
	(*Transaction)(nil),                  // 29: kvstore.v1.Transaction
	(*timestamppb.Timestamp)(nil),        // 30: google.protobuf.Timestamp
}
var file_kvstore_v1_kv_proto_depIdxs = []int32{
	1,  // 0: kvstore.v1.KVStoreWrapper.typ:type_name -> kvstore.v1.KVStoreWrapper.RequestType
	3,  // 1: kvstore.v1.KVStoreWrapper.create_account_request:type_name -> kvstore.v1.CreateAccountRequest
	4,  // 2: kvstore.v1.KVStoreWrapper.create_account_reply:type_name -> kvstore.v1.CreateAccountResponse
	5,  // 3: kvstore.v1.KVStoreWrapper.delete_account_request:type_name -> kvstore.v1.DeleteAccountRequest
	6,  // 4: kvstore.v1.KVStoreWrapper.delete_account_reply:type_name -> kvstore.v1.DeleteAccountResponse
	7,  // 5: kvstore.v1.KVStoreWrapper.get_account_descriptor_request:type_name -> kvstore.v1.GetAccountDescriptorRequest
	8,  // 6: kvstore.v1.KVStoreWrapper.get_account_descriptor_reply:type_name -> kvstore.v1.GetAccountDescriptorResponse
	10, // 7: kvstore.v1.KVStoreWrapper.create_bucket_request:type_name -> kvstore.v1.CreateBucketRequest
	11, // 8: kvstore.v1.KVStoreWrapper.create_bucket_reply:type_name -> kvstore.v1.CreateBucketResponse
	12, // 9: kvstore.v1.KVStoreWrapper.delete_bucket_request:type_name -> kvstore.v1.DeleteBucketRequest
	13, // 10: kvstore.v1.KVStoreWrapper.delete_bucket_reply:type_name -> kvstore.v1.DeleteBucketResponse
	17, // 11: kvstore.v1.KVStoreWrapper.get_key_request:type_name -> kvstore.v1.GetKeyRequest
	18, // 12: kvstore.v1.KVStoreWrapper.get_key_reply:type_name -> kvstore.v1.GetKeyResponse
	19, // 13: kvstore.v1.KVStoreWrapper.put_key_request:type_name -> kvstore.v1.PutKeyRequest
	20, // 14: kvstore.v1.KVStoreWrapper.put_key_reply:type_name -> kvstore.v1.PutKeyResponse
	21, // 15: kvstore.v1.KVStoreWrapper.delete_key_request:type_name -> kvstore.v1.DeleteKeyRequest
	22, // 16: kvstore.v1.KVStoreWrapper.delete_key_reply:type_name -> kvstore.v1.DeleteKeyResponse
	15, // 17: kvstore.v1.KVStoreWrapper.get_bucket_descriptor_request:type_name -> kvstore.v1.GetBucketDescriptorRequest
	16, // 18: kvstore.v1.KVStoreWrapper.get_bucket_descriptor_reply:type_name -> kvstore.v1.GetBucketDescriptorResponse
	28, // 19: kvstore.v1.KVStoreWrapper.error:type_name -> errors.v1.Error
	29, // 20: kvstore.v1.CreateAccountRequest.transaction:type_name -> kvstore.v1.Transaction
	9,  // 21: kvstore.v1.CreateAccountResponse.account_descriptor:type_name -> kvstore.v1.AccountDescriptor
	29, // 22: kvstore.v1.CreateAccountResponse.transaction:type_name -> kvstore.v1.Transaction
	29, // 23: kvstore.v1.DeleteAccountRequest.transaction:type_name -> kvstore.v1.Transaction
	29, // 24: kvstore.v1.DeleteAccountResponse.transaction:type_name -> kvstore.v1.Transaction
	9,  // 25: kvstore.v1.GetAccountDescriptorResponse.account_descriptor:type_name -> kvstore.v1.AccountDescriptor
	30, // 26: kvstore.v1.AccountDescriptor.created:type_name -> google.protobuf.Timestamp
	30, // 27: kvstore.v1.AccountDescriptor.last_updated:type_name -> google.protobuf.Timestamp
	29, // 28: kvstore.v1.CreateBucketRequest.transaction:type_name -> kvstore.v1.Transaction
	14, // 29: kvstore.v1.CreateBucketResponse.bucket_descriptor:type_name -> kvstore.v1.BucketDescriptor
	29, // 30: kvstore.v1.CreateBucketResponse.transaction:type_name -> kvstore.v1.Transaction
	29, // 31: kvstore.v1.DeleteBucketRequest.transaction:type_name -> kvstore.v1.Transaction
	29, // 32: kvstore.v1.DeleteBucketResponse.transaction:type_name -> kvstore.v1.Transaction
	30, // 33: kvstore.v1.BucketDescriptor.created:type_name -> google.protobuf.Timestamp
	30, // 34: kvstore.v1.BucketDescriptor.last_updated:type_name -> google.protobuf.Timestamp
	14, // 35: kvstore.v1.GetBucketDescriptorResponse.bucket_descriptor:type_name -> kvstore.v1.BucketDescriptor
	26, // 36: kvstore.v1.GetKeyResponse.key_value_pair:type_name -> kvstore.v1.KeyValue
	26, // 37: kvstore.v1.PutKeyRequest.key_value_pair:type_name -> kvstore.v1.KeyValue
	29, // 38: kvstore.v1.PutKeyRequest.transaction:type_name -> kvstore.v1.Transaction
	29, // 39: kvstore.v1.PutKeyResponse.transaction:type_name -> kvstore.v1.Transaction
	29, // 40: kvstore.v1.DeleteKeyRequest.transaction:type_name -> kvstore.v1.Transaction
	29, // 41: kvstore.v1.DeleteKeyResponse.transaction:type_name -> kvstore.v1.Transaction
	0,  // 42: kvstore.v1.Event.type:type_name -> kvstore.v1.KeyOperationType
	26, // 43: kvstore.v1.Event.kv:type_name -> kvstore.v1.KeyValue
	26, // 44: kvstore.v1.Event.prev_kv:type_name -> kvstore.v1.KeyValue
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_kvstore_v1_kv_proto_init() }
func file_kvstore_v1_kv_proto_init() {
	if File_kvstore_v1_kv_proto != nil {
		return
	}
	file_kvstore_v1_transactions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kvstore_v1_kv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVStoreWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeyVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeyVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvstore_v1_kv_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kvstore_v1_kv_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*KVStoreWrapper_CreateAccountRequest)(nil),
		(*KVStoreWrapper_CreateAccountReply)(nil),
		(*KVStoreWrapper_DeleteAccountRequest)(nil),
		(*KVStoreWrapper_DeleteAccountReply)(nil),
		(*KVStoreWrapper_GetAccountDescriptorRequest)(nil),
		(*KVStoreWrapper_GetAccountDescriptorReply)(nil),
		(*KVStoreWrapper_CreateBucketRequest)(nil),
		(*KVStoreWrapper_CreateBucketReply)(nil),
		(*KVStoreWrapper_DeleteBucketRequest)(nil),
		(*KVStoreWrapper_DeleteBucketReply)(nil),
		(*KVStoreWrapper_GetKeyRequest)(nil),
		(*KVStoreWrapper_GetKeyReply)(nil),
		(*KVStoreWrapper_PutKeyRequest)(nil),
		(*KVStoreWrapper_PutKeyReply)(nil),
		(*KVStoreWrapper_DeleteKeyRequest)(nil),
		(*KVStoreWrapper_DeleteKeyReply)(nil),
		(*KVStoreWrapper_GetBucketDescriptorRequest)(nil),
		(*KVStoreWrapper_GetBucketDescriptorReply)(nil),
		(*KVStoreWrapper_Error)(nil),
	}
	file_kvstore_v1_kv_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_kvstore_v1_kv_proto_msgTypes[25].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvstore_v1_kv_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kvstore_v1_kv_proto_goTypes,
		DependencyIndexes: file_kvstore_v1_kv_proto_depIdxs,
		EnumInfos:         file_kvstore_v1_kv_proto_enumTypes,
		MessageInfos:      file_kvstore_v1_kv_proto_msgTypes,
	}.Build()
	File_kvstore_v1_kv_proto = out.File
	file_kvstore_v1_kv_proto_rawDesc = nil
	file_kvstore_v1_kv_proto_goTypes = nil
	file_kvstore_v1_kv_proto_depIdxs = nil
}
