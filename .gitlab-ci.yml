variables:
  GO_VERSION: "1.19"
  MAGE_VERSION: "1.13.0"

include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - build
  - test

cache:
  paths:
    - /go/pkg/mod

before_script:
  - ci/scripts/install-mage.sh

build:
  stage: build
  image: "golang:$GO_VERSION"
  script:
    - |
      mage install:godeps
      mage build:compile
  artifacts:
    paths:
      - "build/pleiades"
    name: "pleiades"
    expire_in: "3 days"
  rules:
    - if: '$BUILD_DISABLED'
      when: never
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'

code_quality:
  rules:
    - if: $CODE_QUALITY_DISABLED
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run code quality job in merge request pipelines
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH      # Run code quality job in pipelines on the default branch (but not in other branch pipelines)
    - if: $CI_COMMIT_TAG   

test:
  stage: test
  image: "golang:$GO_VERSION"
  script:
    - go test ./... -coverprofile=coverage.txt -covermode count
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.txt > coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
